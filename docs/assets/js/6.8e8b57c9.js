(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{358:function(t,s,a){t.exports=a.p+"assets/img/pic_2.1.ebeab2b7.png"},359:function(t,s,a){t.exports=a.p+"assets/img/pic_2.2.e91fc787.png"},370:function(t,s,a){"use strict";a.r(s);var n=a(45),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"互操作性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#互操作性"}},[t._v("#")]),t._v(" 互操作性")]),t._v(" "),n("h2",{attrs:{id:"与objective-c-api交互"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与objective-c-api交互"}},[t._v("#")]),t._v(" 与Objective-C API交互")]),t._v(" "),n("p",[n("em",[t._v("互操作性")]),t._v("让Swift与Objective-C双向互为接口的能力，使你能在一种语言中访问并使用另一个文件中用另一种语言编写的代码。在开始把Swift整合进开发工作流之前，先理解如何利用互操作性来改善、改进和增强Cocoa应用的开发方式是个好主意。")]),t._v(" "),n("p",[t._v("关于互操作性的一个重要的方面是它能让你在编写Swift代码时使用Objective-C的API。导入Objective-C框架之后，你就可以用原生的Swift语法初始化其中的类并与之交互。")]),t._v(" "),n("h3",{attrs:{id:"初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#初始化"}},[t._v("#")]),t._v(" 初始化")]),t._v(" "),n("p",[t._v("要在Swift中初始化一个Objective-C的类，你可以用Swift的语法调用它的某个构造方法。")]),t._v(" "),n("p",[t._v("Objective-C的构造方法以"),n("code",[t._v("init")]),t._v("开头，如果构造方法接受一个或多个参数则是以"),n("code",[t._v("initWith:")]),t._v("开头。当Objective-C的构造方法被导入Swift的时候，"),n("code",[t._v("init")]),t._v("前缀变为"),n("code",[t._v("init")]),t._v("关键词，表示此方法是Swift的构造方法。如果构造方法接受参数，那么"),n("code",[t._v("With")]),t._v("会被去掉，方法选择器（selector）的其他部分会被分开成为相应的命名参数。")]),t._v(" "),n("p",[t._v("比如下面的Objective-C构造方法声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initWithFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CGRect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("frame\n\t\t\t\t\t\tstyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("UITableViewStyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("下面是等效的Swift构造方法声明：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewStyle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* ... */")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Objective-C和Swift的语法差别在初始化对象时就很明显了。")]),t._v(" "),n("p",[t._v("在Objective-C中，你这么写：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[t._v("UITableView "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("myTableView "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ［"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UITableView alloc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithFrame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("CGRectZero style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("UITableViewStyleGrouped"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在Swift中，你这么写：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myTableView "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableView")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UITableView")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGRectZero")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" style"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Grouped")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("注意，你无需调用"),n("code",[t._v("alloc")]),t._v("；Swift会帮你正确处理。另外需要注意的是，在调用Swift风格的构造方法时，任何位置都没有出现“init”。")]),t._v(" "),n("p",[t._v("你可以在为常量或变量赋值的时候，显示的指定类型；你也可以省略类型声明，让Swift根据构造方法推断（infer）出类型。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myTextField "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UITextField")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("code",[t._v("UITableView")]),t._v("和"),n("code",[t._v("UITextField")]),t._v("对象与你在Objective-C中初始化的对象是一样的。你可以像在Objective-C中一样使用它们，访问相应的类中定义的的任何属性，调用任何方法。")]),t._v(" "),n("h4",{attrs:{id:"类的工厂方法和快捷构造方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#类的工厂方法和快捷构造方法"}},[t._v("#")]),t._v(" 类的工厂方法和快捷构造方法")]),t._v(" "),n("p",[t._v("为了一致性和简便性，Objective-C类的工厂方法以快捷构造方法（convenient initializer）的形式导入Swift。你能用与构造方法相同的语法调用它们。")]),t._v(" "),n("p",[t._v("例如，在Objective-C中，你像这样调用这个工厂方法：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[t._v("UIColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("UIColor colorWithRed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(" blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),t._v(" alpha"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在Swift中，你像这样调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" color "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UIColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("red"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" green"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" blue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" alpha"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"可失败构造方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可失败构造方法"}},[t._v("#")]),t._v(" 可失败构造方法")]),t._v(" "),n("p",[t._v("在Objective-C中，构造方法直接返回它们初始化的对象。要在初始化失败时告知调用者，Objective-C的构造方法会返回"),n("code",[t._v("nil")]),t._v("。在Swift中，这个模式成为一种语言特性，叫做“"),n("em",[t._v("可失败构造方法")]),t._v("”（failable initializer）。")]),t._v(" "),n("p",[t._v("系统框架中的很多Objective-C构造方法已经被修改为可以指示初始化是否会失败。你也可以在你自己的Objective-C类中使用在"),n("a",{attrs:{href:"#%E7%A9%BA%E5%80%BC%E5%92%8C%E5%8F%AF%E9%80%89%E7%B1%BB%E5%9E%8B"}},[t._v("空值和可选类型")]),t._v("章节中介绍的"),n("em",[t._v("可空性标记")]),t._v("（nullability annotions）指示构造方法是否会初始化失败。根据构造方法是否会初始化失败的指示，Objective-C的构造方法会被导入为"),n("code",[t._v("init(...)")]),t._v("--如果不会初始化失败，或者"),n("code",[t._v("init?(...)")]),t._v("--如果可能会初始化失败。否则，Objective-C的构造方法会被导入为"),n("code",[t._v("init!(...)")]),t._v("。")]),t._v(" "),n("p",[t._v("例如，"),n("code",[t._v("UIImage(contentOfFile:)")]),t._v("构造方法在初始化"),n("code",[t._v("UIImage")]),t._v("对象的时候，如果给定的路径下图片文件不存在，就会初始化失败。你可以使用可选类型绑定（optional binding）在初始化成功时提取可失败构造方法的结果。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" image "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UIImage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("contentOfFile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyImage.png"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 图片载入成功")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 无法载入图片")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"访问属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问属性"}},[t._v("#")]),t._v(" 访问属性")]),t._v(" "),n("p",[t._v("用"),n("code",[t._v("@property")]),t._v("语法声明的Objective-C属性，以如下几种方式导入为Swift属性：")]),t._v(" "),n("ul",[n("li",[t._v("包含空值指示参数（"),n("code",[t._v("nonnull")]),t._v("，"),n("code",[t._v("nullable")]),t._v("和"),n("code",[t._v("null_resettable")]),t._v("）的属性，被导入为对应的可选类型或非可选类型的Swift属性，详见"),n("a",{attrs:{href:"#%E7%A9%BA%E5%80%BC%E5%92%8C%E5%8F%AF%E9%80%89%E7%B1%BB%E5%9E%8B"}},[t._v("空值和可选类型")]),t._v("。")]),t._v(" "),n("li",[t._v("包含"),n("code",[t._v("readonly")]),t._v("(只读)参数的属性，被导入为只包含取值方法（gette）("),n("code",[t._v("{getter}")]),t._v(")的Swift计算属性（computed property）。")]),t._v(" "),n("li",[t._v("包含"),n("code",[t._v("weak")]),t._v("（弱）参数的属性，被导入为用"),n("code",[t._v("weak")]),t._v("关键词标注（"),n("code",[t._v("weak var")]),t._v("）的Swift属性。")]),t._v(" "),n("li",[t._v("包含除"),n("code",[t._v("weak")]),t._v("外的其他所属关系参数（也就是"),n("code",[t._v("assign")]),t._v("，"),n("code",[t._v("copy")]),t._v("，"),n("code",[t._v("strong")]),t._v("或"),n("code",[t._v("unsafe_unretained")]),t._v("）的属性，被导入为适当存储的Swift属性。")]),t._v(" "),n("li",[t._v("属性的原子性参数（"),n("code",[t._v("atomic")]),t._v("和"),n("code",[t._v("nonatomic")]),t._v("）不会反映在Swift参数中。但当导入的属性在Swift中访问时，Objective-C实现中保证的原子性会被保留。")]),t._v(" "),n("li",[t._v("属性的访问方法（accessor）参数（"),n("code",[t._v("getter=")]),t._v("和"),n("code",[t._v("setter=")]),t._v("）在Swift中被忽略。")])]),t._v(" "),n("p",[t._v("在Swift中访问Objective-C对象的属性使用点语法（dot syntax），属性名后面无需加括号。")]),t._v(" "),n("p",[t._v("例如，你可以用如下代码为"),n("code",[t._v("UITextField")]),t._v("对象的"),n("code",[t._v("textColor")]),t._v("和"),n("code",[t._v("text")]),t._v("属性赋值：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("myTextField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textColor "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("darkGrayColor")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmyTextField"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello world"')]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[n("code",[t._v("darkGrayColor()")]),t._v("的后面是包含括号的，因为"),n("code",[t._v("darkGrayColor()")]),t._v("是"),n("code",[t._v("UIColor")]),t._v("的类方法，不是一个属性。")])]),t._v(" "),n("p",[t._v("Objective-C中，不包含参数，但是有返回值的方法可以像Objective-C属性一样用点语法调用。但是这些方法是作为实例方法导入Swift的，只有使用"),n("code",[t._v("@property")]),t._v("声明的Objective-C属性才会被导入为Swift属性。方法的导入和调用在"),n("a",{attrs:{href:"#%E6%96%B9%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8"}},[t._v("方法的使用")]),t._v("章节介绍。")]),t._v(" "),n("h3",{attrs:{id:"方法的使用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法的使用"}},[t._v("#")]),t._v(" 方法的使用")]),t._v(" "),n("p",[t._v("你可以使用点语法在Swift中调用Objective-C方法。")]),t._v(" "),n("p",[t._v("当Objective-C方法导入Swift之后，Objective-C方法选择器（selector）的第一部分变成Swift的方法名，出现在括号外面。第一个参数紧随开括号出现，是没有参数名的。方法选择器的其他部分分别作为对应命名参数出现在括号中。在调用时，所有的参数都是必须的。")]),t._v(" "),n("p",[t._v("例如，在Objective-C中这样的代码：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myTableView insertSubview"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" mySubview atIndexPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("在Swift中，是这样的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("myTableView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertSubview")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mySubView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" atIndexPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("即使你调用的方法没有参数，你依然需要在最后包含一个空括号。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("myTableView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("layoutIfNeeded")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"id的兼容性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#id的兼容性"}},[t._v("#")]),t._v(" id的兼容性")]),t._v(" "),n("p",[t._v("Swift有一种"),n("code",[t._v("AnyObject")]),t._v("类型，用来代表某个对象。它和Objective-C中的"),n("code",[t._v("id")]),t._v("类型很相似。Swift把"),n("code",[t._v("id")]),t._v("导入为"),n("code",[t._v("AnyObject")]),t._v("，使你能够在编写类型安全的Swift代码的同时，保留不确定类型对象（untyped object）的灵活性。")]),t._v(" "),n("p",[t._v("例如，像"),n("code",[t._v("id")]),t._v("一样，你可以为"),n("code",[t._v("AnyObject")]),t._v("类型的常量或变量赋任何类型的值。你还可以为变量重新赋一个另一种类型值。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myObject "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UITableViewCell")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nmyObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("你也可以无需进行类型转化，就能对"),n("code",[t._v("AnyObject")]),t._v("类型的值调用任何Objective-C方法，访问任何属性。包括使用"),n("code",[t._v("@objc")]),t._v("注解（attribute）的兼容Objective-C的方法。")]),t._v(" "),n("p",[t._v("（译者按：本书中的annotation都被翻译成注解。Swift和Objective-C的注解与Java的注解看起来有点类似，但是区别也非常大，请注意分别。另外，在适当的时候，部分名字以"),n("code",[t._v("@")]),t._v("开头的attributes也被翻译成注解。）")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" futureDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dateByAddingTimeInterval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeSinceNow "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeIntervalSinceNow\n")])])]),n("h4",{attrs:{id:"无法识别的方法选择器和可选调用链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无法识别的方法选择器和可选调用链"}},[t._v("#")]),t._v(" 无法识别的方法选择器和可选调用链")]),t._v(" "),n("p",[t._v("因为声明为"),n("code",[t._v("AnyObject")]),t._v("的对象的类型要到运行时才被确定，所以可能会导致你不经意地编写了不安全的代码。不论是在Swift中还是在Objective-C中，试图调用一个不存在的方法，都会触发“无法识别的方法选择器”（unrecognized selector）错误。")]),t._v(" "),n("p",[t._v("例如，下面这行代码能够顺利编译通过，但是在运行时会触发“无法识别的方法选择器”（unrecognized selector）错误：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("charactorAtIndex")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 程序崩溃，myObject不能执行这个方法")]),t._v("\n")])])]),n("p",[t._v("Swift使用可选类型来应对这种不安全的行为。当你对"),n("code",[t._v("AnyObject")]),t._v("类型的值调用方法的时候，方法调用的行为与隐式解包可选类型（implicit unwrapped optionals）差不多。你可以用像在调用协议中的可选方法时使用的可选调用链（Optional Chaining）一样，来对"),n("code",[t._v("AnyObject")]),t._v("对象可选地触发一个方法。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("访问"),n("code",[t._v("AnyObject")]),t._v("对象的属性，总是返回可选类型值。如果属性本来就是返回一个可选类型，那么它的返回值就回编程一个双重包装的可选类型（doubly-wrapped optional type），例如"),n("code",[t._v("AnyObject?!")]),t._v("。")])]),t._v(" "),n("p",[t._v("例如，在下面列出的代码中，第一行和第二行没有被执行，因为"),n("code",[t._v("count")]),t._v("属性和"),n("code",[t._v("characterAtIndex:")]),t._v("方法在"),n("code",[t._v("NSDate")]),t._v("对象中不存在。"),n("code",[t._v("myCount")]),t._v("常量被推断为可选"),n("code",[t._v("Int")]),t._v("类型，然后被赋值为"),n("code",[t._v("nil")]),t._v("。你也可以使用"),n("code",[t._v("if")]),t._v("-"),n("code",[t._v("let")]),t._v("语句来有条件地提取对象可能无法响应的方法的执行结果，就像第三行代码展示的那样。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myObject是AnyObject类型，包含了一个NSDate值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myCount "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("count")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myCount是Int?类型，值为nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myChar "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("characterAtIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myChar是unichar?类型，值为nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fifthCharacter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("characterAtIndex"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("fifthCharacter"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v(' at Index 5"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 条件分支没有被执行")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("尽管Swift在对类型为"),n("code",[t._v("AnyObject")]),t._v("的值调用方法时，并不会要求强制解包，不过这是安全应对未知行为的途径之一。")])]),t._v(" "),n("h4",{attrs:{id:"anyobject向下类型转换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#anyobject向下类型转换"}},[t._v("#")]),t._v(" AnyObject向下类型转换")]),t._v(" "),n("p",[t._v("当"),n("code",[t._v("AnyObject")]),t._v("对象的底层类型已经知道，或可以被推断出来时，我们通常会把它向下转换为更加特定的类型。但是因为"),n("code",[t._v("AnyObject")]),t._v("可能代表任何类型的对象，类型转换并不能保证成功。")]),t._v(" "),n("p",[t._v("你可以使用条件类型转换操作符（"),n("code",[t._v("as?")]),t._v("）来进行转换操作。它将返回目标类型的可选值（optional value）：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" userDefaults "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSUserDefaults")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("standardUserDefaults")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" lastRefreshDate "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" userDefaults"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("objectForKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LastRefreshDate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" date "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastRefreshDate "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Date")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeIntervalSinceReferenceDate"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果你确知对象的类型，你也可以使用强制类型转换操作符（"),n("code",[t._v("as!")]),t._v("）。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastReferenceDate "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timeInterval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myDate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeIntervalSinceReferenceDate\n")])])]),n("p",[t._v("不过，如果强制类型转换失败了，将会触发一个运行时错误：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lastReferenceDate "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误")]),t._v("\n")])])]),n("h3",{attrs:{id:"空值和可选类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#空值和可选类型"}},[t._v("#")]),t._v(" 空值和可选类型")]),t._v(" "),n("p",[t._v("（译者注：nullability这里翻译为空值，主要是为了不发明大家看不懂的新词。nullability的直译的话，意为“可否为空值的一种能力”。后文中nullbility将不会使用直译，我会根据上下文环境尽量避免晦涩，多用意译。）")]),t._v(" "),n("p",[t._v("在Objective-C中，你使用原生的指针来操作可能为"),n("code",[t._v("NULL")]),t._v("(在Objective-C中被称为"),n("code",[t._v("nil")]),t._v(")的引用。在Swift中，所有的值--包括结构体和对象的引用--总是为非空的。取而代之，你需要将可能为空的值封装到一个可选类型（optional type）中。当你需要表示值不存在的时候，你可以使用"),n("code",[t._v("nil")]),t._v("。要了解更多关于可选类型的信息，你可以参阅“Swift编程语言（Swift 2.2版）”的“可选类型”章节。")]),t._v(" "),n("p",[t._v("Objective-C可以使用空值标记（nullability annotation）来标识参数、属性或返回值能否包含"),n("code",[t._v("NULL")]),t._v("或"),n("code",[t._v("nil")]),t._v("。单独的类型声明可以使用"),n("code",[t._v("_Nullable")]),t._v("和"),n("code",[t._v("_Nonnull")]),t._v("标记，单独的属性声明可以使用"),n("code",[t._v("nullable")]),t._v("，"),n("code",[t._v("nonnull")]),t._v("和"),n("code",[t._v("null_resettable")]),t._v("标记，或者你也可以使用"),n("code",[t._v("NS_ASSUME_NONNULL_BEGIN")]),t._v("和"),n("code",[t._v("NS_ASSUME_NONNULL_END")]),t._v("宏把一段代码标记成不为空（nonnull）。如果类型没有空值标记信息，Swift就无法区分可选和非可选的引用了，它们将被作为隐式解包可选类型（implicit unwrapped optional）被导入。")]),t._v(" "),n("ul",[n("li",[t._v("无论是用"),n("code",[t._v("_Nonnull")]),t._v("标记或者包围在非空宏被声明为不为空的类型，都作为非可选类型导入Swift。")]),t._v(" "),n("li",[t._v("使用"),n("code",[t._v("_Nullable")]),t._v("标记为可空（nullable）的类型，作为可选类型导入Swift。")]),t._v(" "),n("li",[t._v("没有使用空值标记的类型，作为隐式解包可选类型导入Swift。")])]),t._v(" "),n("p",[t._v("例如，来看看的这段Objective-C声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id nullableProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" id nonNullProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" id unannotatedProperty"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("NSASSUME_NONNULL_BEGIN")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("returnsNonNullValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("takesNonNullParameter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token macro property"}},[n("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),n("span",{pre:!0,attrs:{class:"token expression"}},[t._v("NSASSUME_NONNULL_END")])]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" returnsNullableValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" takesNullableParameter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nullable id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("returnsUnannotatedValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("takesUnannotatedParameter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("它们是这样被导入Swift的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nullableProperty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nonNullProperty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" unannotatedProperty "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("returnsNonNullValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takesNonNullParameter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("returnsNullableValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takesNullableParameter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("returnsUnannotatedValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takesUnannotatedParameter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("大部分Objective-C系统框架，包括Foundation，都已经包含了空值标记，你可以用习惯的方法安全地处理各类值。")]),t._v(" "),n("h3",{attrs:{id:"轻量级泛型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#轻量级泛型"}},[t._v("#")]),t._v(" 轻量级泛型")]),t._v(" "),n("p",[t._v("Objective-C中，使用轻量级泛型进行参数化的声明的"),n("code",[t._v("NSArray")]),t._v("，``NSSet"),n("code",[t._v("和")]),t._v("NSDictionary`类型，在导入Swift的时候，参数的类型信息会被保留。")]),t._v(" "),n("p",[t._v("例如，下面的这段Objective-C的属性声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSArray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dates"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSSet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSDictionary"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cachedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("是这样导入Swift的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dates "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" words "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cachedData "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NSURL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("除了这些Foundation框架中的集合类之外，Objective-C的轻量级泛型会被Swift忽略。其他任何使用了轻量级泛型的类型在导入Swift的时候，都会被去参数化。")])]),t._v(" "),n("h3",{attrs:{id:"扩展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),n("p",[t._v("Swift的扩展(Extension)与Objective-C的扩展（Category）类似。"),n("em",[t._v("扩展")]),t._v("可以为已有的类、结构体和枚举，甚至是那些在Objective-C中定义的类型，增加新的行为。无论是系统框架中定义的类，还是自定义类型，你都可以为它们定义扩展。你只需导入适当的模块，用类、结构体或枚举的名字来使用它们，就像在Objective-C中一样。")]),t._v(" "),n("p",[t._v("比如，你可以像下面这样扩展"),n("code",[t._v("UIBezierPath")]),t._v("类，利用边长和起始点来创建一个简单的等边三角形贝塞尔曲线。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIBezierPath")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("convenience")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("triangleSideLength"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGFloat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" squareRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGFloat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" altitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("squareRoot "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" triangleSideLegth"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveToPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLineToPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" triangleSideLength"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addLineToPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGPoint")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" triangleSideLength "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" origin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" altitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("closePath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你也可以使用扩展增加属性（包括类属性和静态属性）。不过这些属性必须是计算属性；扩展无法为类、结构体或枚举增加带存储的属性。")]),t._v(" "),n("p",[t._v("下面这个扩展的例子展示了如何为"),n("code",[t._v("CGRect")]),t._v("结构体增加一个计算属性"),n("code",[t._v("area")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extension")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGRect")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" area "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGFloat")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" height\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" area "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("area\n")])])]),n("p",[t._v("你还可以使用扩展来增加协议支持，而无需创建子类。如果协议是在Swift中定义的，那么不管结构体和枚举是在Swift还是在Objective-C中定义的，你都可以通过扩展让它们支持该协议。")]),t._v(" "),n("p",[t._v("你不能使用扩展来覆盖Objective-C类型的已有的方法或属性。")]),t._v(" "),n("h3",{attrs:{id:"闭包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),n("p",[t._v("用"),n("code",[t._v("@convention(block)")]),t._v("注解标记的Objective-C的块（block）在导入为Swift闭包时，使用Objective-C的调用惯例。例如，下面的这个Objective-C的块变量：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("completionBlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("导入Swift后，它是这样的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" completionBlock"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Swift的闭包与Objective-C的块是兼容的，你可以给接受块参数的Objective-C方法传一个Swift的闭包。如果Swift的闭包和函数有相同的类型签名，你甚至可以直接传一个Swift函数名。")]),t._v(" "),n("p",[t._v("闭包与块有着相似的值捕获语义（capture semantics），但是有一个关键的地方不一样：变量是可以被更改的，而不是被复制的。换句话说，Objective-C中，需要使用"),n("code",[t._v("__block")]),t._v("标记的变量的行为，在Swift中是默认行为。")]),t._v(" "),n("h4",{attrs:{id:"捕获self的时候避免强引用循环"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捕获self的时候避免强引用循环"}},[t._v("#")]),t._v(" 捕获self的时候避免强引用循环")]),t._v(" "),n("p",[t._v("在Objective-C中，如果你需要在块中捕获"),n("code",[t._v("self")]),t._v("，你需要考量一下内存管理机制。")]),t._v(" "),n("p",[t._v("块会对捕获的对象，包括"),n("code",[t._v("self")]),t._v("，保持强引用。如果"),n("code",[t._v("self")]),t._v("也对块保持了强引用，比如复制属性，这样就会造成强引用循环。要避免这个问题，你可以让块捕获"),n("code",[t._v("self")]),t._v("的一个弱引用：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[t._v("__weak "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" weakSelf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("block "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t__strong "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" strongSelf "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" weakSelf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("strongSelf doSomething"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("与Objective-C的块一样，Swift也会对捕获的任何对象，包括"),n("code",[t._v("self")]),t._v("，保持一个强引用。要避免强引用循环，你需要在闭包的捕获列表中，把"),n("code",[t._v("self")]),t._v("标记为"),n("code",[t._v("unowned")]),t._v("：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("closure "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unowned")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("doSomething")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("要了解更多信息，请参考“Swift编程语言（Swift 2.2版）”的“解决闭包的强引用循环”章节。")]),t._v(" "),n("h3",{attrs:{id:"对象比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象比较"}},[t._v("#")]),t._v(" 对象比较")]),t._v(" "),n("p",[t._v("在比较两个对象的时候，Swift中有两种不同的比较方法。第一种，是"),n("em",[t._v("相等")]),t._v("（"),n("code",[t._v("==")]),t._v("），比较的是两个对象的内容。第二种，是"),n("em",[t._v("相同（"),n("code",[t._v("===")]),t._v("）")]),t._v("，比较的是常量或变量对象是否为同一个实例。")]),t._v(" "),n("p",[t._v("派生自"),n("code",[t._v("NSObject")]),t._v("类的对象，Swift为之提供了默认的"),n("code",[t._v("==")]),t._v("和"),n("code",[t._v("===")]),t._v("操作符实现，并且接受"),n("code",[t._v("Equatable")]),t._v("协议。默认的"),n("code",[t._v("==")]),t._v("操作符实现是调用"),n("code",[t._v("isEqual:")]),t._v("方法。而默认的"),n("code",[t._v("===")]),t._v("实现则是检查指针是否相同。你不应该覆盖导入自Objective-C的类型的比较相等或相同的操作符。")]),t._v(" "),n("p",[n("code",[t._v("NSObject")]),t._v("类中定义的"),n("code",[t._v("isEqual:")]),t._v("的基本实现时指针相等检查。你可以在子类中覆盖"),n("code",[t._v("isEqual:")]),t._v("方法，让Swift和Objective-C的API能够基于对象包含的内容而不失对象的身分来进行相等性比较。要了解更多关于如何实现比较的逻辑，请参考"),n("strong",[t._v("Cocoa Core Competencies")]),t._v("的对象比较部分。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("Swift会为相等操作符自动创建对应的不想等操作符（"),n("code",[t._v("!=")]),t._v("和"),n("code",[t._v("!==")]),t._v("）。你不应该覆盖着两个操作符。")])]),t._v(" "),n("h3",{attrs:{id:"哈希"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#哈希"}},[t._v("#")]),t._v(" 哈希")]),t._v(" "),n("p",[t._v("Swift为派生自"),n("code",[t._v("NSObject")]),t._v("类的对象提供了符合"),n("code",[t._v("Hashable")]),t._v("协议所需的"),n("code",[t._v("hashValue")]),t._v("属性的默认实现。"),n("code",[t._v("hashValue")]),t._v("属性的默认实现是调用"),n("code",[t._v("hash")]),t._v("属性。")]),t._v(" "),n("p",[t._v("提供了自定义"),n("code",[t._v("isEqual")]),t._v("方法的"),n("code",[t._v("NSObject")]),t._v("的子类也必须提供它们自己的"),n("code",[t._v("hash")]),t._v("属性实现。")]),t._v(" "),n("h3",{attrs:{id:"swift类型的兼容性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#swift类型的兼容性"}},[t._v("#")]),t._v(" Swift类型的兼容性")]),t._v(" "),n("p",[t._v("当你创建了一个派生自Objective-C类的Swift类，这个类以及它的与Objective-C兼容的成员--属性、方法、下标（subscript，译者注：也就是从一组值中用索引取值的方法）以及构造方法等--会自动对Objective-C可用。但是并不支持Swift特有的特性，例如下面列出的这些：")]),t._v(" "),n("ul",[n("li",[t._v("泛型")]),t._v(" "),n("li",[t._v("元组")]),t._v(" "),n("li",[t._v("在Swift中定义，且原始值类型不为"),n("code",[t._v("Int")]),t._v("的枚举类型")]),t._v(" "),n("li",[t._v("在Swift中定义的结构体")]),t._v(" "),n("li",[t._v("在Swift中定义的顶层方法")]),t._v(" "),n("li",[t._v("在Swift中定义的全局变量")]),t._v(" "),n("li",[t._v("在Swift中定义的类型别名")]),t._v(" "),n("li",[t._v("Swift风格的可变参数")]),t._v(" "),n("li",[t._v("嵌套类型")]),t._v(" "),n("li",[t._v("柯里化函数（译者按：Curried functions的翻译参考了"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%9F%AF%E9%87%8C%E5%8C%96",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),n("OutboundLink")],1),t._v("）")])]),t._v(" "),n("p",[t._v("把Swift的API翻译成Objective-C与把Objective-C的API翻译成Swift时很类似，只是过程相反：")]),t._v(" "),n("ul",[n("li",[t._v("Swift中的可选类型被标记为"),n("code",[t._v("__nullable")]),t._v("。")]),t._v(" "),n("li",[t._v("Swift中的非可选类型被标记为"),n("code",[t._v("__nonnull")]),t._v("。")]),t._v(" "),n("li",[t._v("Swift中的常量存储属性和计算属性转换为Objective-C的只读属性。")]),t._v(" "),n("li",[t._v("Swift中的变量存储属性转换为可读写的Objective-C属性。")]),t._v(" "),n("li",[t._v("Swift中的类方法（type method）转换成Objective-C的类方法（class method）。")]),t._v(" "),n("li",[t._v("Swift中的构造方法和实例方法转换成Objective-C的实例方法。")]),t._v(" "),n("li",[t._v("Swift中可能抛出错误的方法转换成Objective-C中带有末尾"),n("code",[t._v("NSError **")]),t._v("参数并且在方法名中加上"),n("code",[t._v("AndReturnError:")]),t._v("。如果Swift方法并没有指定返回类型，那么对应的Objective-C方法会包含"),n("code",[t._v("BOOL")]),t._v("返回类型。")])]),t._v(" "),n("p",[t._v("例如，下面这段Swift代码：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Jukebox")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" library"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" nowPlaying"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" isCurrentlyPlaying"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" nowPlaying "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("song"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("library "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("song"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("playSong")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("named name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 播放音乐或在音乐不可用时抛出错误")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("上述代码导入Objective-C时会转换成如下定义：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" Jukebox "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NSObject\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" copy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NSSet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull library"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" copy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nullable nowPlaying"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonatomic"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" readonly"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" BOOL isCurrentlyPlaying"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nonnull instancetype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initWithSongs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSArray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("songs OBJC_DESIGNATED_INITIALIZER"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("playSong"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("__nonnull"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("name error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __nullable "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" __null_unspecified"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("你无法在Objective-C中创建Swift类的子类。")])]),t._v(" "),n("h4",{attrs:{id:"配置swift暴露给objective-c的接口"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置swift暴露给objective-c的接口"}},[t._v("#")]),t._v(" 配置Swift暴露给Objective-C的接口")]),t._v(" "),n("p",[t._v("在某些情况下，你可能需要精细控制如何将Swift API暴露给Objective-C。你可以在Swift类中使用"),n("code",[t._v("@objc")]),t._v("注解来修改暴露给Objective-C的接口中符号的名字（译者按：也就是属性名、方法名等）。")]),t._v(" "),n("p",[t._v("例如，如果Swift类的名字包含了Objective-C不支持的字符，你可以提供一个在Objective-C中使用的名字。如果你要为一个Swift方法提供一个Objective-C名字，你可以使用Objective-C的选择器(selector)语法。不要忘记在选择器的各个接受参数的位置后面加上冒号("),n("code",[t._v(":")]),t._v(")。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("objc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Squirrel")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" 松鼠 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("objc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("initWithName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("名字"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("objc")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("hideNuts"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("inTree"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" 收藏"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("几"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 个坚果到大树 大树"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 树"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当你对Swift的类使用"),n("code",[t._v("@objc(")]),n("em",[t._v("name")]),n("code",[t._v(")")]),t._v("注解的时候，这个类会在Objective-C中可用，并且不在任何名字空间内。因此，这个注解在你迁移一个可以存档（archivable）的Objective-C类到Swift的时候也很有用。因为可以存档的对象会保存它们的类名到存档文件（archive）中，你应该使用"),n("code",[t._v("@objc(")]),n("em",[t._v("name")]),n("code",[t._v(")")]),t._v("注解来指定与Objective-C类一样的名字，这样，旧的存档文件才能被新建的Swift类解包（unarchive）。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("相对的，Swift也可以用"),n("code",[t._v("@nonobjc")]),t._v("注解，让Swift中的声明在Objective-C中不可用。你可以用这个方法来解决桥接方法（bridging methods）的循环引用，这样就可以覆盖用"),n("code",[t._v("@objc")]),t._v("注解标记的类中的方法。如果一个Objective-C的方法被Swift的方法覆盖，但该方法无法在Objective-C中表示，例如，通过指定一个参数是可变的，那个方法必须标记为"),n("code",[t._v("@nonobjc")]),t._v("。")])]),t._v(" "),n("h4",{attrs:{id:"使用动态分配"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用动态分配"}},[t._v("#")]),t._v(" 使用动态分配")]),t._v(" "),n("p",[t._v("当Swift API被Objective-C运行时导入时，它无法确保属性、方法、下标或构造器能被动态分配（dynamic dispatch）Swift编译器可能依然会去虚化（devirtualize）或内嵌（inline）访问成员，绕过Objective-C运行时，优化代码的性能。")]),t._v(" "),n("p",[t._v("你可以用"),n("code",[t._v("dynamic")]),t._v("修饰符标记成员的声明，访问这个成员的时候，能保证它总是动态分配的。需要动态分配的场景很少。不过如果你知道某个API的实现会被运行时替换，那么你就必须使用"),n("code",[t._v("dynamic")]),t._v("修饰符。例如，你可以使用Objective-C运行时环境的"),n("code",[t._v("method_exchangeImplementations")]),t._v("方法在程序运行时替换到一个方法的实现。如果Swift编译器内嵌了方法的实现，或者把它的访问去虚化了，那么新的实现将不被使用。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("dynamic")]),t._v("修饰符标记的声明无法同时使用"),n("code",[t._v("@nonobjc")]),t._v("注解。")])]),t._v(" "),n("h3",{attrs:{id:"objective-c的方法选择器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#objective-c的方法选择器"}},[t._v("#")]),t._v(" Objective-C的方法选择器")]),t._v(" "),n("p",[t._v("Objective-C的方法选择器是一种可以引用Objective-C方法名的类型。在Swift中，Objective-C的方法选择器用"),n("code",[t._v("Selector")]),t._v("结构体表示。你可以用一个字符串来构造一个方法选择器，例如"),n("code",[t._v('let mySelector: Selector = "tappedButton:"')]),t._v("。因为字符串可以自动转换为方法选择器，所以你可以给所有接受方法选择器参数的方法传入字符串。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIKit")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myButton "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("UIButton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frame"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nibName nibNameOrNil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bundle nibBundleOrNil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSBundle")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nibName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nibNameOrNil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bundle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" nilBundleOrNil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tmyButton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addTarget")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tappedButton:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forControlEvents"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("TouchUpInside")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tappedButton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sender"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIButton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tapped button"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSCoder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" coder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果你的Swift类继承自Objective-C类，类中的所有的方法和属性都可以用作Objective-C的方法选择器。反之，如果你的Swift类并没有继承自Objective-C类，那么你需要使用"),n("code",[t._v("@objc")]),t._v("注解标注你想用作方法选择器的成员，就像在"),n("a",{attrs:{href:"#swift%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7"}},[t._v("Swift类型的兼容性")]),t._v("中描述的那样。")]),t._v(" "),n("h4",{attrs:{id:"用performselector来发送消息"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用performselector来发送消息"}},[t._v("#")]),t._v(" 用performSelector来发送消息")]),t._v(" "),n("p",[t._v("（译者注：Objective-C的发送消息，在其他语言中叫做方法调用，两者有所区别，但是基本作用相同。）")]),t._v(" "),n("p",[t._v("你可以使用"),n("code",[t._v("performSelctor(_:)")]),t._v("及其变体向Objective-C兼容的对象发送消息。")]),t._v(" "),n("p",[n("code",[t._v("performSelector")]),t._v(" API可以向某个线程或在一段时间的延迟后发送的消息，是没有返回值的。同步执行的"),n("code",[t._v("performSelector")]),t._v(" API返回一个隐式解包的非托管的可选类型实例（"),n("code",[t._v("Unmanaged<AnyObject>!")]),t._v("），因为执行方法选择器得到返回值的类型、所属关系在编译时无法知晓。你可以阅读"),n("a",{attrs:{href:"#%E9%9D%9E%E6%89%98%E7%AE%A1%E5%AF%B9%E8%B1%A1"}},[t._v("非托管对象")]),t._v("章节了解更多信息。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, Cocoa!"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Selector")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lowercaseString"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeUnretainedValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印出 "hello, cocoa!"')]),t._v("\n")])])]),n("p",[t._v("向对象发送一个无法识别的方法选择器，会导致接收者去调用"),n("code",[t._v("doesNotRecognizeSelector(_:)")]),t._v("，这个方法默认引发一个"),n("code",[t._v("NSInvalidArgumentException")]),t._v("异常。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" array"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSArray")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delta"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"alpha"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zulu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" invalidSelecto"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Selector")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"invalid"')]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("performSelector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("invalidSelector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引发一个异常")]),t._v("\n")])])]),n("p",[t._v("在Objective-C运行时向对象直接发送消息在本质上是不安全的，因为编译器无法对发送消息得到的结果作保证，甚至无法保证对象可以接收某个消息。因此，通常是不鼓励使用"),n("code",[t._v("performSelector")]),t._v(" API的，除非你的代码对Objective-C运行时提供的动态方法解析有特殊需求。否则，先把一个对象转换成"),n("code",[t._v("AnyObject")]),t._v("，然后使用可选调用链来调用方法会安全很多。详见"),n("a",{attrs:{href:"#id%E7%9A%84%E5%85%BC%E5%AE%B9%E6%80%A7"}},[t._v("id的兼容性")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"编写具备objective-c行为的swift类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写具备objective-c行为的swift类"}},[t._v("#")]),t._v(" 编写具备Objective-C行为的Swift类")]),t._v(" "),n("p",[t._v("互操作性使你能定义具备Objective-C行为的Swift类。你可以在编写Swift类的时候继承Objective-C的类，接受Objective-C的协议，并利用其他Objective-C的功能。这意味着你可以创建基于你熟悉的、有着明确行为的Objective-C类创建子类，同时，你可以使用Swift的现代、强大的语言特征来增强它。")]),t._v(" "),n("h3",{attrs:{id:"继承objective-c的类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#继承objective-c的类"}},[t._v("#")]),t._v(" 继承Objective-C的类")]),t._v(" "),n("p",[t._v("在Swift中，你可以定义Objective-C类的子类。要创建一个继承自Objective-C类的Swift类，你可以在Swift的类名后架上冒号（"),n("code",[t._v(":")]),t._v("），再加上Objective-C类的名字。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIKit")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySwiftViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义这个类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以获得用Objective-C定义的亲类的所有功能。如果你要为亲类中的同名方法提供你自己的实现，你需要使用"),n("code",[t._v("override")]),t._v("关键字。")]),t._v(" "),n("h4",{attrs:{id:"nscoding"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nscoding"}},[t._v("#")]),t._v(" NSCoding")]),t._v(" "),n("p",[n("code",[t._v("NSCoding")]),t._v("协议要求符合改协议的类型实现"),n("code",[t._v("init(coder:)")]),t._v("构造方法。接受"),n("code",[t._v("NSCoding")]),t._v("协议的类必须实现这个方法，该类的子类如果有一个以上自定义构造方法、或包含没有初始值的属性，那么它也必须接受"),n("code",[t._v("NSCoding")]),t._v("协议。Xcode提供了下面这个自动修正（fix-it）功能，提供了一个默认实现：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("required")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("coder aDecoder"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSCoder")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fatalError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init(coder:) has not been implemented"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("对于从StoryBoard中加载的对象，或者用"),n("code",[t._v("NSUserDefaults")]),t._v("或"),n("code",[t._v("NSKeyedArchiver")]),t._v("存档至磁盘中的对象，你必须为这个构造函数提供一个完整的实现。不过，你可能不需要为那些无法或不会通过这种途径初始化的类型实现这个构造方法。")]),t._v(" "),n("h3",{attrs:{id:"支持协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#支持协议"}},[t._v("#")]),t._v(" 支持协议")]),t._v(" "),n("p",[t._v("Objective-C的协议会导入为Swift的协议，如果需要的话，类可以通过在其亲类名后，加上逗号分隔的协议名列表，以支持协议。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MySwiftViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIViewController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDataSource")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义这个类")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在Swift代码中，要定义一个符合单个协议的类型，可以直接使用协议名作为其类型（对比Objective-C中的"),n("code",[t._v("id<SomeProtocal>")]),t._v("）。要在Swift代码中定义一个符合多个协议的类型，可以使用复合协议（protocal composition），形如"),n("code",[t._v("protocal<SomeProtocal, AnotherProtocal>")]),t._v("（对比Objective-C中的"),n("code",[t._v("id<SomeProtocal, AnotherProtocal>")]),t._v("）。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textFieldDelegate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDelegate")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableViewController"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" protocal"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDataSource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDelegate")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("因为Swift中的类和协议使用同一个名字空间，因此，Objective-C中的"),n("code",[t._v("NSObject")]),t._v("协议在Swift中被映射为"),n("code",[t._v("NSObjectProtocal")]),t._v("。")])]),t._v(" "),n("h3",{attrs:{id:"编写构造方法和析构方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#编写构造方法和析构方法"}},[t._v("#")]),t._v(" 编写构造方法和析构方法")]),t._v(" "),n("p",[t._v("Swift的编译器会确保你的构造方法不会遗留任何没有初始化的属性以增强代码的安全性和可预测性。另外，与Objective-C不同的是，Swift不需要额外调用内存分配方法。即便你在使用Objective-C的类，你也只需要使用原生的Swift构造语法--Swift会把Objective-C的构造方法转换成Swift的构造方法。你可以阅读“Swift编程语言（Swift 2.2版）”的“构造方法”章节，了解更多关于如何实现你自己的构造方法的信息。")]),t._v(" "),n("p",[t._v("当你需要在对象被回收时做一些额外的清理工作，你可以实现一个析构方法，而不是使用"),n("code",[t._v("dealloc")]),t._v("方法。Swift的析构方法会在实例被回收前自动调用。Swift会在触发子类的析构方法后，自动调用亲类的析构方法。当你操作的是Objective-C类，或者你的Swift类继承自Objective-C类，Swift一样也会调用该类的亲类的"),n("code",[t._v("dealloc")]),t._v("方法。你可以阅读“Swift编程语言（Swift 2.2版）”的“析构方法”章节了解更多关于如何实现你自己的析构方法的信息。")]),t._v(" "),n("h3",{attrs:{id:"在objective-c-api中使用swift的类名"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在objective-c-api中使用swift的类名"}},[t._v("#")]),t._v(" 在Objective-C API中使用Swift的类名")]),t._v(" "),n("p",[t._v("Swift的类是根据它们编译进的模块来确定名字空间的，即便是用于Objective-C的代码中时也一样。和所有的类都在全局名字空间中，因而不能包含两个同名类的Objective-C不一样，Swift的类可以通过它们所处的模块进行区分。例如，在名为"),n("code",[t._v("MyFramework")]),t._v("的框架中，名为"),n("code",[t._v("DataManager")]),t._v("的类的全名"),n("code",[t._v("MyFramework.DataManager")]),t._v("。Swift应用的编译目标（Target）也是一个模块，因此在一个叫做"),n("code",[t._v("MyGreatApp")]),t._v("的应用中，名为"),n("code",[t._v("Observer")]),t._v("的类的全名为"),n("code",[t._v("MyGreatApp.Observer")]),t._v("。")]),t._v(" "),n("p",[t._v("为了保留在Objective-C中使用的Swift类的名字空间，Swift的类暴露给Objective-C运行时环境的时候，暴露的是全名。因此，当你使用以字符串的形式操作Swift的类名的时候，你必须使用类的全名。例如，当你需要创建一个基于文档的Mac应用的时候，你需要在应用的"),n("code",[t._v("Info.plist")]),t._v("文件中指定"),n("code",[t._v("NSDocument")]),t._v("子类的类名。如果你是用Swift编写应用，那么你必须使用这个文档子类的全名，也就是要包含应用或框架的模块名。")]),t._v(" "),n("p",[t._v("在下面这个示例中，"),n("code",[t._v("NSClassFromString")]),t._v("函数用来通过字符串形式的类名来获取类的引用。要获取一个Swift类，你就必须使用包含了应用名的类的全名：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myPersonClass"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyClass")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSClassFromString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyGreatApp.Person"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"与interface-builder整合"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与interface-builder整合"}},[t._v("#")]),t._v(" 与Interface Builder整合")]),t._v(" "),n("p",[t._v("（译者注：Interface Builder作为一个Xcode的一个组件，我没有给出翻译。一方面翻译后听起来很别扭；另一方面，也不方便用户对照查找。Interface Builder字面上的意思“界面构建器”。）")]),t._v(" "),n("p",[t._v("Swift编译器支持能让你的Swift类与Interface Builder交互的注解。和在Objective-C中一样，你可以使用外连（outlets），动作（actions）和实时渲染。")]),t._v(" "),n("p",[t._v("（译者注：outlet还没有统一的翻译，这里暂时翻译成外连。后文中可能会根据情况，保留英文原文。）")]),t._v(" "),n("h4",{attrs:{id:"使用外连和动作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用外连和动作"}},[t._v("#")]),t._v(" 使用外连和动作")]),t._v(" "),n("p",[t._v("外连和动作能把你的源代码和Interface Builder中的用户界面对象连接起来。要在Swift中使用外连和动作，你可以在属性和方法声明的前面分别加上"),n("code",[t._v("@IBOutlet")]),t._v("和"),n("code",[t._v("@IBAction")]),t._v("注解。"),n("code",[t._v("@IBOutlet")]),t._v("也可以用来声明外连集合（outlet collection）--只需指定类型为数组。")]),t._v(" "),n("p",[t._v("当你在Swift中声明外连的时候，你需要把类型设置为隐式解包可选类型（implicit unwrapped optional）。这样，storyboard就能在初始化之后，通过运行时把外连和界面连接起来了。当你的类通过storyboard或xib文件初始化完成后，你就可以认为外连已经连接好了。")]),t._v(" "),n("p",[t._v("例如，下面这段Swift代码定义了一个包含有一个外连，一个外连集合和一个动作的类：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIViewController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("weak")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" button"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIButton")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textFields"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITextField")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBAction")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("buttonTapped")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"button tapped!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("因为"),n("code",[t._v("sender")]),t._v("参数在"),n("code",[t._v("buttonTapped")]),t._v("方法中没有用到，因此参数名可以忽略。")]),t._v(" "),n("h4",{attrs:{id:"实时渲染"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实时渲染"}},[t._v("#")]),t._v(" 实时渲染")]),t._v(" "),n("p",[t._v("你可以使用另外两个注解--"),n("code",[t._v("@IBDesignable")]),t._v("和"),n("code",[t._v("@IBInspectable")]),t._v("--来使用实时渲染，在Interface Builder中与自定义视图（View）进行交互。当你创建了一个派生自"),n("code",[t._v("UIView")]),t._v("或"),n("code",[t._v("NSView")]),t._v("类的自定义视图的时候，你就可以在类声明的前面加上"),n("code",[t._v("@IBDesignable")]),t._v("注解。当你把这个自定义视图加入Interface Builder中之后（通过在inspector面板中，设置视图对应的自定义类），Interface Builder就会在画板（Canvas）上对你的视图进行实时渲染。")]),t._v(" "),n("p",[t._v("你还可以对支持自定义的属性使用"),n("code",[t._v("@IBInspectable")]),t._v("注解。在你把自定义视图加入Interface Builder中之后，你就能在Inspector面板中编辑这些属性了。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBDesignable")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyCustomView")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIView")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBInspectable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" textColor"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIColor")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBInspectable")]),t._v(" iconHeight"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CGFloat")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"设置属性的参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置属性的参数"}},[t._v("#")]),t._v(" 设置属性的参数")]),t._v(" "),n("p",[t._v("（译者注：注意区分属性的参数（attributes）区别与方法的参数（attributes））")]),t._v(" "),n("p",[t._v("在Objective-C中，属性有一系列可以指定关于属性行为的额外信息的参数。在Swift中，你用不同的方式来指定这些属性参数。")]),t._v(" "),n("h4",{attrs:{id:"强引用和弱引用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#强引用和弱引用"}},[t._v("#")]),t._v(" 强引用和弱引用")]),t._v(" "),n("p",[t._v("Swift的属性默认是强引用。你需要使用"),n("code",[t._v("weak")]),t._v("关键词来表明属性指向的存储属性值的对象使用的是弱引用。这个关键词只能被用于可选类型的属性。详情请参阅“Swift编程语言（Swift 2.2版）”的“参数”（Attributes）章节。")]),t._v(" "),n("h4",{attrs:{id:"读写与只读"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#读写与只读"}},[t._v("#")]),t._v(" 读写与只读")]),t._v(" "),n("p",[t._v("在Swift中，没有"),n("code",[t._v("readwrite")]),t._v("和"),n("code",[t._v("readonly")]),t._v("参数。当声明存储属性时，使用"),n("code",[t._v("let")]),t._v("来使之成为只读，使用"),n("code",[t._v("var")]),t._v("来使之可以读写。当声明计算属性的时候，只提供取值方法（getter）使之成为只读，同时提供取值方法（getter）和赋值方法（setter）使之可以读写。要了解更多信息，请查看“Swift编程语言（Swift 2.2版）”的“属性”章节。")]),t._v(" "),n("h4",{attrs:{id:"复制语义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复制语义"}},[t._v("#")]),t._v(" 复制语义")]),t._v(" "),n("p",[t._v("在Swift中，Objective-C的"),n("code",[t._v("copy")]),t._v("属性参数被转译为"),n("code",[t._v("@NSCopying")]),t._v("。属性的类型需要复合"),n("code",[t._v("NSCopying")]),t._v("协议。要了解更多信息，请查看“Swift编程语言（Swift 2.2版）”的“参数”（Attributes）章节。")]),t._v(" "),n("h3",{attrs:{id:"实现core-data的托管对象子类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实现core-data的托管对象子类"}},[t._v("#")]),t._v(" 实现Core Data的托管对象子类")]),t._v(" "),n("p",[t._v("（译者注：这里Managed Object翻译成托管对象。如果你学过.NET，请不要把这里的托管对象与.NET里的托管对象混淆，两者概念不一样。）")]),t._v(" "),n("p",[t._v("Core Data为"),n("code",[t._v("NSManagedObject")]),t._v("的子类提供了属性的底层存储和实现的支持。Core Data还提供了在对多关系（to-many relationship）中增加和删除对象的实例方法的实现。你可以使用"),n("code",[t._v("@NSManaged")]),t._v("注解来告诉Swift编译器，Core Data会在运行时提供存储和实现。")]),t._v(" "),n("p",[t._v("你需要在你的托管类的子类中，为所有与Core Data模型相关的属性和关系有关的属性和方法声明加上"),n("code",[t._v("@NSManaged")]),t._v("注解。比如，假设有一个名为“Person”的Core Data实体（Entity）有一个字符串属性“name”，以及一个对多的关系“friends”：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(358),alt:"img"}})]),t._v(" "),n("p",[t._v("以下是"),n("code",[t._v("NSManagedObject")]),t._v("子类的"),n("code",[t._v("Person")]),t._v("对应的Swift代码：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CoreData")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSManagedObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" friends"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSet")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFriendsObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeFriendsObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friend"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFriends")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friends"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@NSManaged")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addFriends")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("friends"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSet")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("name")]),t._v("和"),n("code",[t._v("friends")]),t._v("属性声明都使用了"),n("code",[t._v("@NSManaged")]),t._v("注解，用来指示Core Data在运行时为它们提供了存储和实现。因为"),n("code",[t._v("friends")]),t._v("属性是对多关系，Core Data还提供了一系列对应的访问方法实现。")]),t._v(" "),n("p",[t._v("要把用Swift编写的"),n("code",[t._v("NSManagedObject")]),t._v("子类用于Core Data的模型实体，你需要打开Xcode的模型实体检查面板，在Class文本框中输入类名，并从Module下拉列表中选择“Current Product Module”。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(359),alt:"img"}})]),t._v(" "),n("h2",{attrs:{id:"使用cocoa数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用cocoa数据类型"}},[t._v("#")]),t._v(" 使用Cocoa数据类型")]),t._v(" "),n("p",[t._v("作为与Objective-C互操作性功能的一部分，Swift提供了便利而高效的利用Cocoa数据类型的方法。")]),t._v(" "),n("p",[t._v("Swift会自动把部分Objective-C的数据类型转换成Swift的数据类型、把部分Swift数据类型转换成Objective-C数据类型。有些数据类型在Swift和Objective-C中时可以通用的。可以转换或通用的数据类型，我们称之为"),n("em",[t._v("桥接")]),t._v("（bridged）类型。例如，在Swift代码中，你可以把"),n("code",[t._v("Array")]),t._v("类型的值传给一个接受"),n("code",[t._v("NSArray")]),t._v("对象的方法。你也可以在桥接的类型之间进行类型转换。当你在桥接的类型之间进行转换时--用"),n("code",[t._v("as")]),t._v("或直接为常量或变量显式地指定类型--Swift会自动对类型进行桥接。")]),t._v(" "),n("p",[t._v("Swift还为Foundation数据类型提供了快捷接口层，让这些数据类型的使用语法，感觉起来与Swift语言的其它部分更加自然、统一地结合。")]),t._v(" "),n("h3",{attrs:{id:"字符串"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),n("p",[t._v("Swift会自动桥接"),n("code",[t._v("String")]),t._v("类型和"),n("code",[t._v("NSString")]),t._v("类。这意味着如果你在任何地方需要使用"),n("code",[t._v("NSString")]),t._v("，那么你也可以使用"),n("code",[t._v("String")]),t._v("类型替代。它同时具有"),n("code",[t._v("String")]),t._v("类型的字符串变量插入（interpolation）功能和其它的Swift字符串API，以及"),n("code",[t._v("NSString")]),t._v("类提供的大量功能。因此，你几乎永远都不需要在你的Swift代码中直接使用"),n("code",[t._v("NSString")]),t._v("类。事实上，在Swift导入Objective-C的API时，会把所有的"),n("code",[t._v("NSString")]),t._v("类型替换为"),n("code",[t._v("String")]),t._v("类型。当你的Objective-C代码导入Swift类的时候，在导入的API中，所有的"),n("code",[t._v("String")]),t._v("类型都会被替换为"),n("code",[t._v("NSString")]),t._v("类型。")]),t._v(" "),n("p",[t._v("要使用字符串桥接，你只需要导入Foundation模块。比如，你可以访问Swift字符串的"),n("code",[t._v("capitalizedString")]),t._v("属性--这是来自"),n("code",[t._v("NSString")]),t._v("类的属性。Swift会自动桥接"),n("code",[t._v("String")]),t._v("到"),n("code",[t._v("NSString")]),t._v("对象以访问这个属性。这个属性甚至会直接返回Swift的"),n("code",[t._v("String")]),t._v("类，因为它在导入的过程中已经进行了类型转换。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Foundation")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" greeting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello, world!"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" capitalizedGreeting "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" greeting"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("capitalizedString\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// capitalizedString: String = Hello, World!")]),t._v("\n")])])]),n("p",[t._v("如果你确实需要使用"),n("code",[t._v("NSString")]),t._v("对象，你可以在需要的时候通过类型转换把它转成Swift的"),n("code",[t._v("String")]),t._v("类型值。因为"),n("code",[t._v("String")]),t._v("类型值随时都可以由"),n("code",[t._v("NSString")]),t._v("对象转换而成，因此在进行类型转换时无需使用可选类型转换操作符（"),n("code",[t._v("as?")]),t._v("）。你也可以显式地指定变量或常量的类型，并为它赋一个字符串字面量（string literal）来创建一个"),n("code",[t._v("NSString")]),t._v("对象。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Foundation")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myString "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSString")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"123"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" integerValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myString "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"'),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("myString"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v(" is the integer "),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("integerValue"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印出"123 is the integer 123"')]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("Swift的"),n("code",[t._v("String")]),t._v("结构体类型的实例无法用"),n("code",[t._v("AnyObject")]),t._v("类型来表示，因为"),n("code",[t._v("AnyObject")]),t._v("只能用来代表类的实例。不过，当Foundation的桥接启用后，Swift的"),n("code",[t._v("String")]),t._v("值会被桥接到"),n("code",[t._v("NSString")]),t._v("类的实例，这样就可以被赋值给"),n("code",[t._v("AnyObject")]),t._v("类型的常量或变量了。")])]),t._v(" "),n("h4",{attrs:{id:"本地化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#本地化"}},[t._v("#")]),t._v(" 本地化")]),t._v(" "),n("p",[t._v("在Objective-C中，通常使用"),n("code",[t._v("NSLocalizedString")]),t._v("系列的宏定义来创建本地化字符串的。这个系列的宏包括"),n("code",[t._v("NSLocalizedString")]),t._v("，"),n("code",[t._v("NSLicalizedStringFromTable")]),t._v("，"),n("code",[t._v("NSLocalizedStringFromTableInBundle")]),t._v("和"),n("code",[t._v("NSLocalizedStringWithDefaultValue")]),t._v("。在Swift中，你可以使用一个方法--"),n("code",[t._v("NSLocalizedString(key:tableName:bundle:value:comment:)")]),t._v("--来提供整个"),n("code",[t._v("NSLocalizedString")]),t._v("系列的宏的功能。"),n("code",[t._v("NSLocalizedString")]),t._v("为"),n("code",[t._v("tableName")]),t._v("，"),n("code",[t._v("bundle")]),t._v("和"),n("code",[t._v("value")]),t._v("参数提供了默认值。你可以在以前使用宏的地方使用这个方法。")]),t._v(" "),n("h3",{attrs:{id:"数字类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数字类型"}},[t._v("#")]),t._v(" 数字类型")]),t._v(" "),n("p",[t._v("Swift会自动桥接原生的数字类型，例如"),n("code",[t._v("Int")]),t._v("和"),n("code",[t._v("Float")]),t._v("到"),n("code",[t._v("NSNumber")]),t._v("类型。这个桥接功能让你可以用这些类型创建"),n("code",[t._v("NSNumber")]),t._v("对象：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" m "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSNumber")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n\n")])])]),n("p",[t._v("这也允许你把"),n("code",[t._v("Int")]),t._v("类型值传给接受"),n("code",[t._v("NSNumber")]),t._v("对象作为参数的方法。需要注意的是，因为"),n("code",[t._v("NSNUmber")]),t._v("能够包含多种数字类型的对象，所以你不能把它传给接受某种特定的数字类型，比如"),n("code",[t._v("Int")]),t._v("值的方法。")]),t._v(" "),n("p",[t._v("以下所有的类型都会自动桥接到"),n("code",[t._v("NSNumber")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("Int")])]),t._v(" "),n("li",[n("code",[t._v("UInt")])]),t._v(" "),n("li",[n("code",[t._v("Float")])]),t._v(" "),n("li",[n("code",[t._v("Double")])]),t._v(" "),n("li",[n("code",[t._v("Bool")])])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("Swift的数字结构体类型，比如"),n("code",[t._v("Int")]),t._v("，"),n("code",[t._v("UInt")]),t._v("，"),n("code",[t._v("Float")]),t._v("，"),n("code",[t._v("Double")]),t._v("和"),n("code",[t._v("Bool")]),t._v("的实例无法用"),n("code",[t._v("AnyObject")]),t._v("类型来表示，因为"),n("code",[t._v("AnyObject")]),t._v("只能用来代表类的实例。不过，当Foundation的桥接启用后，Swift的数字类型值会被桥接到"),n("code",[t._v("NSNumber")]),t._v("类的实例，这样就可以被赋值给"),n("code",[t._v("AnyObject")]),t._v("类型的常量或变量了。")])]),t._v(" "),n("h3",{attrs:{id:"集合类"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#集合类"}},[t._v("#")]),t._v(" 集合类")]),t._v(" "),n("p",[t._v("Swift会分别把"),n("code",[t._v("NSArray")]),t._v("，"),n("code",[t._v("NSSet")]),t._v("和"),n("code",[t._v("NSDictionary")]),t._v("桥接到"),n("code",[t._v("Array")]),t._v("，"),n("code",[t._v("Set")]),t._v("和"),n("code",[t._v("Dictionary")]),t._v("类。这意味着你可以在利用Swift强大的算法的同时，用自然的语法来操作集合类，并能同时使用Foundation和Swift的集合类型。")]),t._v(" "),n("h4",{attrs:{id:"数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),n("p",[t._v("Swift自动桥接"),n("code",[t._v("Array")]),t._v("和"),n("code",[t._v("NSArray")]),t._v("类。当你把参数化的"),n("code",[t._v("NSArray")]),t._v("对象桥接到Swift数组的时候，得到的数组的类型是"),n("code",[t._v("[ObjectType]")]),t._v("。如果"),n("code",[t._v("NSArray")]),t._v("对象没有参数化类型，它会桥接到类型为"),n("code",[t._v("[AnyObject]")]),t._v("的Swift数组。")]),t._v(" "),n("p",[t._v("例如下面的这段Objective-C声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSArray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("dates"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSArray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("datesBeforeDate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addDatesParsedFromTimestamps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSArray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("String "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("timestamps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Swift导入后会是下面这样：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" dates "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("datesBeforeDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("date"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addDatesParsedFromTimestamps")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timestamps"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("如果一个对象是Objective-C或Swift类的实例，或者可以被桥接到一个类，那么它就与"),n("code",[t._v("AnyObject")]),t._v("兼容。你可以桥接所有的"),n("code",[t._v("NSArray")]),t._v("对象到Swift的数组，因为所有的Objective-C对象都与"),n("code",[t._v("AnyObject")]),t._v("兼容。因为所有的"),n("code",[t._v("NSArray")]),t._v("对象都可以桥接到Swift的数组，所以Swift编译器在导入Objective-C的API时会把"),n("code",[t._v("NSArray")]),t._v("类替换为"),n("code",[t._v("[AnyObject]")]),t._v("。")]),t._v(" "),n("p",[t._v("在你把"),n("code",[t._v("NSArray")]),t._v("对象桥接到Swift数组之后，你就可以把数组的类型转换成更加明确的类型。与把"),n("code",[t._v("NSArray")]),t._v("对象转换成"),n("code",[t._v("[AnyObject]")]),t._v("类型不同的是，把"),n("code",[t._v("AnyObject")]),t._v("向下转换成一个更加明确的类型并不能保证成功。在运行之前，编译器是无法确知数组的所有元素都能被转换成你所指定的类型的。因此，你需要使用条件类型转换操作符"),n("code",[t._v("as?")]),t._v("来将"),n("code",[t._v("[AnyObject]")]),t._v("向下转换为"),n("code",[t._v("[SomeType]")]),t._v("，在你确信转换可以成功时，也可以使用无条件类型转换操作符"),n("code",[t._v("as!")]),t._v("。例如，如果你知道Swift数组只包含"),n("code",[t._v("NSView")]),t._v("类（或"),n("code",[t._v("NSView")]),t._v("的子类）的实例，你就可以把包含"),n("code",[t._v("AnyObject")]),t._v("类型元素的数组向下转换成"),n("code",[t._v("NSView")]),t._v("对象数组了。如果在运行时，Swift数组中有任何一个元素不是"),n("code",[t._v("NSView")]),t._v("对象，类型转换的结果就会返回"),n("code",[t._v("nil")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" swiftArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fundationArray "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" downcastedArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" swiftArray "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSView")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// downcastedArray只含有NSView对象的话，会执行到这里")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你也可以直接在for循环中，把"),n("code",[t._v("NSArray")]),t._v("对象转换成特定类型的Swift数组：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" view "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" foundationArray "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSView")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// view的类型为NSView")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当你把Swift的数组桥接到"),n("code",[t._v("NSArray")]),t._v("对象时，Swift数组的所有成员必须与"),n("code",[t._v("AnyObject")]),t._v("兼容。例如，一个类型为"),n("code",[t._v("[Int]")]),t._v("的Swift数组包含的时"),n("code",[t._v("Int")]),t._v("结构体元素。虽然"),n("code",[t._v("Int")]),t._v("类型并不是一个类的实例，但是"),n("code",[t._v("Int")]),t._v("类型可以被桥接至"),n("code",[t._v("NSNumber")]),t._v("类，因此"),n("code",[t._v("Int")]),t._v("类型依然与"),n("code",[t._v("AnyObject")]),t._v("兼容的。所以你可以把类型为"),n("code",[t._v("[Int]")]),t._v("的Swift数组桥接到"),n("code",[t._v("NSArray")]),t._v("对象。如果Swift数组的元素类型和"),n("code",[t._v("AnyObject")]),t._v("不兼容，那么当你把它桥接到"),n("code",[t._v("NSArray")]),t._v("对象时，会引起一个运行时错误。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("作为性能优化的一项措施，把一个集合无条件向下类型转换成另一个类型更加特殊的集合时，例如，"),n("code",[t._v("NSArray as! [NSView]")]),t._v("，数组成员的类型检查可能会被延迟到它们被访问的时候才会进行。因此，无条件类型转换为不兼容的类型可能会看起来成功了，直到某个元素的类型转换失败触发一个运行时错误。")]),t._v(" "),n("p",[t._v("把一个集合对象通过条件类型转换转成另一个类型更加特殊的集合时，例如，"),n("code",[t._v("NSArray as? [NSView]")]),t._v("，会立刻对所有的数组元素进行类型检查。如果有任何数组元素在进行类型转换时出错，就会返回"),n("code",[t._v("nil")]),t._v("。")])]),t._v(" "),n("p",[t._v("你也可以通过与前面提到的桥接规则相同的方式，直接用Swift的数组字面量创建一个"),n("code",[t._v("NSArray")]),t._v("对象。当你显式地把一个常量或变量指定为"),n("code",[t._v("NSArray")]),t._v("类型，并给它赋值一个数组字面量时，Swift会创建一个"),n("code",[t._v("NSArray")]),t._v("对象而不是Swift数组。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" schoolSupplies "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSArray")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Pencil"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Eraser"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Notebook"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// schoolSupplies是一个包含NSString对象的NSArray对象。")]),t._v("\n")])])]),n("p",[t._v("上例中，Swift的数组字面量包含了三个"),n("code",[t._v("String")]),t._v("字面量。因为"),n("code",[t._v("String")]),t._v("类型可以桥接至"),n("code",[t._v("NSString")]),t._v("类，所以数组字面量会被桥接至"),n("code",[t._v("NSArray")]),t._v("对象，对"),n("code",[t._v("schoolSupplies")]),t._v("的赋值就成功了。")]),t._v(" "),n("p",[t._v("当你在Objective-C代码中使用Swift类或协议的时候，所有的Swift数组都会在导入的API中被替换为"),n("code",[t._v("NSArray")]),t._v("。如果你把一个"),n("code",[t._v("NSArray")]),t._v("对象传给一个接受不同类型元素的数组的Swift API时，就会引发一个运行时错误。如果Swift API返回的Swift数组不能被桥接至"),n("code",[t._v("NSArray")]),t._v("，也会引发运行时错误。")]),t._v(" "),n("h4",{attrs:{id:"数集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数集"}},[t._v("#")]),t._v(" 数集")]),t._v(" "),n("p",[t._v("（译者注：Set通常会翻译为集合，但是这样翻译可能会和Collection(集合)混淆，因此我这里把Set翻译为数集。在程序语言中的数集的成员并不局限于数字，通常可以包含任何对象，与数组(array)类似的，请不要因为Set的翻译中包含“数”这个字而引起误会。）")]),t._v(" "),n("p",[t._v("除了数组之外，Swift会自动把"),n("code",[t._v("Set")]),t._v("类型桥接为"),n("code",[t._v("NSSet")]),t._v("类。当你把参数化的"),n("code",[t._v("NSSet")]),t._v("对象桥接至Swift数集时，得到的数集对象的类型为"),n("code",[t._v("Set<ObjectType>")]),t._v("。如果"),n("code",[t._v("NSSet")]),t._v("对象没有参数化，它会被桥接到类型为"),n("code",[t._v("Set<NSObject>")]),t._v("的Swift数集。")]),t._v(" "),n("p",[t._v("（译者按：因为数集实际上声明为"),n("code",[t._v("Set<Element : Hashable>")]),t._v("，因为有了"),n("code",[t._v("Hashable")]),t._v("这个约束，所以映射的时候不是"),n("code",[t._v("AnyObject")]),t._v("，而是"),n("code",[t._v("NSObject")]),t._v("，这一点区别于数组。）")]),t._v(" "),n("p",[t._v("例如，下面这段Objective-C声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSSet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSStirng "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSSet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("wordsMatchingPredicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSPredicate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("predicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("removeWords"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSSet"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("导入Swift之后是这样的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wordsMatchingPredicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("predicate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSPredicate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeWords")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("words"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("和"),n("code",[t._v("NSArray")]),t._v("不一样，不包含参数话类型的"),n("code",[t._v("NSSet")]),t._v("对象在桥接到Swift数集时，类型参数会被影射为"),n("code",[t._v("NSObject")]),t._v("而不是"),n("code",[t._v("AnyObject")]),t._v("，因为Swift的"),n("code",[t._v("Set")]),t._v("所包含元素的类型必须符合"),n("code",[t._v("Hashable")]),t._v("协议。")])]),t._v(" "),n("p",[t._v("你可以把任意"),n("code",[t._v("NSSet")]),t._v("对象桥接至Swift数集，因为所有的Objective-C对象都可以被桥接至"),n("code",[t._v("AnyObject")]),t._v("。因为所有的"),n("code",[t._v("NSSet")]),t._v("对象都可以桥接至Swift数集，因此Swift编译器在导入Objective-C API的时候，会把"),n("code",[t._v("NSSet")]),t._v("类替换为"),n("code",[t._v("Set<NSObject>")]),t._v("。类似的，当你在Objective-C代码中使用Swift类或协议的时候，Swift的数集对象会被重映射至"),n("code",[t._v("NSSet")]),t._v("对象。")]),t._v(" "),n("p",[t._v("把"),n("code",[t._v("NSSet")]),t._v("对象桥接至Swift数集的之后，你可以把这个集合向下类型转换为一个更特殊的数集类型。和Swift数组的向下类型转换一样，Swift数集的向下类型转换并不保证成功，使用"),n("code",[t._v("as?")]),t._v("操作符把"),n("code",[t._v("Set<NSObject>")]),t._v("向下转换为更特殊的类型时，会返回一个可选类型值。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" swiftSet "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" foundationSet "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" downcastedSwiftSet "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" swiftSet "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Set")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITouch")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// downcastedSwiftSet只包含UITouch对象")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你也可以通过与前面提到的桥接规则相同的方式，用一个Swift数组字面量创建一个"),n("code",[t._v("NSSet")]),t._v("对象，当你显式地把一个常量或变量指定为"),n("code",[t._v("NSSet")]),t._v("类型，并给它赋值一个数组字面量时，Swift会创建一个"),n("code",[t._v("NSSet")]),t._v("对象而不是Swift数集。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" amenities"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sauna"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Steam Room"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jacuzzi"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// amenities是一个包含NSString对象的NSSet对象")]),t._v("\n")])])]),n("h4",{attrs:{id:"字典"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#字典"}},[t._v("#")]),t._v(" 字典")]),t._v(" "),n("p",[t._v("Swift也会自动桥接"),n("code",[t._v("Dictionary")]),t._v("类型和"),n("code",[t._v("NSDictionary")]),t._v("类。当你把参数化的"),n("code",[t._v("NSDictionary")]),t._v("对象转换成一个Swift字典时，得到的字典的类型是"),n("code",[t._v("[NSObject: AnyObject]")]),t._v("（译者按，原文为"),n("code",[t._v("[ObjectType]")]),t._v("，应该是错误的。）。如果"),n("code",[t._v("NSDictionary")]),t._v("对象没有参数化，那么它会被桥接至类型为"),n("code",[t._v("[NSObject: AnyObject]")]),t._v("的Swift字典类型。")]),t._v(" "),n("p",[t._v("例如，下面这段Objective-C声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSDictionary"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSData "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("cachedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSNumber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fileSizesForURLsWithSuffix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("suffix"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("setCacheExpirations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSDictionary"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("NSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("expirations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("导入Swift之后是这样的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" cachedData"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fileSizesForURLsWithSuffix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("suffix")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSNumber")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setCacheExpirations")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expirations"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("与"),n("code",[t._v("NSSet")]),t._v("类似，没有参数话的"),n("code",[t._v("NSDictionary")]),t._v("对象在桥接到Swift字典类型时，键的类型是"),n("code",[t._v("NSObject")]),t._v("而不是"),n("code",[t._v("AnyObject")]),t._v("，因为Swift的"),n("code",[t._v("Dictionary")]),t._v("类型要求其键的类型必须符合"),n("code",[t._v("Hashable")]),t._v("协议。")])]),t._v(" "),n("p",[t._v("你可以把任何"),n("code",[t._v("NSDictionary")]),t._v("对象桥接到Swift字典，因为所有的Objective-C对象都与"),n("code",[t._v("AnyObject")]),t._v("兼容。回忆一下，如果对象是Objective-C或Swift的类的实例，或可以被桥接到一个类，那么它就与"),n("code",[t._v("AnyObject")]),t._v("兼容。因为所有的"),n("code",[t._v("NSDictionary")]),t._v("对象可以被桥接到Swift字典，所以Swift编译器会在导入Objective-C API的时候把"),n("code",[t._v("NSDictionary")]),t._v("类替换为"),n("code",[t._v("[NSObject: AnyObject]")]),t._v("。类似的，当你在Objecitve-C代码中使用Swift的类或协议时，Swift字典会被重映射为"),n("code",[t._v("NSDictionary")]),t._v("对象。")]),t._v(" "),n("p",[t._v("把"),n("code",[t._v("NSDictionary")]),t._v("对象桥接至Swift字典的之后，你可以把这个集合向下类型转换为一个更特殊的字典类型。和Swift数组和数集的向下类型转换一样，Swift字典的向下类型转换并不保证成功，使用"),n("code",[t._v("as?")]),t._v("操作符把"),n("code",[t._v("[NSObject: AnyObject]")]),t._v("向下转换为更特殊的类型时，会返回一个可选类型值。")]),t._v(" "),n("p",[t._v("当你反过来进行类型转换的时候--从Swift字典转换成"),n("code",[t._v("NSDictionary")]),t._v("对象--键和值必须都是类的实例，或者可以被桥接到某个类的实例。")]),t._v(" "),n("p",[t._v("你也可以通过与前面提到的桥接规则相同的方式，用一个Swift字典字面量创建一个"),n("code",[t._v("NSDictionary")]),t._v("对象，当你显式地把一个常量或变量指定为"),n("code",[t._v("NSDictionary")]),t._v("类型，并给它赋值一个字典字面量时，Swift会创建一个"),n("code",[t._v("NSDictionary")]),t._v("对象而不是Swift字典。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" medalRankings"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDictionary")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gold"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1st Place"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Silver"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2nd Place"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bronze"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"3rd Place"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// medalRankings是一个包含NSString成员对象的NSDictionary对象。")]),t._v("\n")])])]),n("h3",{attrs:{id:"错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#错误"}},[t._v("#")]),t._v(" 错误")]),t._v(" "),n("p",[t._v("Swift自动把"),n("code",[t._v("ErrorType")]),t._v("桥接至"),n("code",[t._v("NSError")]),t._v("类。会发生错误的Objective-C方法，被导入为可抛出异常的Swift方法。能抛出异常的Swift方法，会遵循Objective-C的错误处理惯例，被导入为会发生错误的Objective-C方法。")]),t._v(" "),n("p",[t._v("有"),n("code",[t._v("@objc")]),t._v("注解，并符合"),n("code",[t._v("ErrorType")]),t._v("协议的Swift枚举类型，会在生成的头文件中创建一个"),n("code",[t._v("NS_ENUM")]),t._v("声明以及错误领域（error domain）所对应的字符串常量。例如，下面这个Swift枚举类型声明：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@objc")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CustomError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorType")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" C\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在生成的头文件中会生成下述对应的Objective-C声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Project-Swift.h")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Swift_ENUM")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSInteger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CustomError"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tCustomErrorA "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tCustomErrorB "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tCustomErrorC "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" NSString "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" CustomErrorDomain "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Project.CustomError"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("请参阅"),n("a",{attrs:{href:"#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86"}},[t._v("错误处理")]),t._v("章节了解更多关于如何在Swift和Objective-C API中使用错误处理的信息。")]),t._v(" "),n("h3",{attrs:{id:"foundation数据类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#foundation数据类型"}},[t._v("#")]),t._v(" Foundation数据类型")]),t._v(" "),n("p",[t._v("Swift为在Foundation框架中定义的数据类型提供了快捷的封装接口。用这个封装层来操作"),n("code",[t._v("CGSize")]),t._v("和"),n("code",[t._v("CGPoint")]),t._v("的时候，语法感觉起来更加自然，与其它Swift代码更加一致。比如，你可以使用下面这种语法来创建"),n("code",[t._v("CGSize")]),t._v("结构体：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" size "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGSize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("40")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("你也可以通过这个封装层自然地调用Foundation的函数和结构体。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" rect "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CGRect")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" width"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" height"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" width "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("width  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价于 CGRectGetWidth(rect)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" maxY "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" rect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("maxY    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等价与 CGRectGetMaxY(rect)")]),t._v("\n")])])]),n("p",[t._v("Swift会把"),n("code",[t._v("NSUInteger")]),t._v("和"),n("code",[t._v("NSInteger")]),t._v("桥接至"),n("code",[t._v("Int")]),t._v("。在Foudation API中，这两种类型都被导入为"),n("code",[t._v("Int")]),t._v("。在Swift中，在所有可能的时候都会使用"),n("code",[t._v("Int")]),t._v("以保持一致性，不过"),n("code",[t._v("UInt")]),t._v("类型在某些一定要使用无符号整数类型的地方还是可用的。")]),t._v(" "),n("h3",{attrs:{id:"foundation函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#foundation函数"}},[t._v("#")]),t._v(" Foundation函数")]),t._v(" "),n("p",[n("code",[t._v("NSLog")]),t._v("在Swift中还是可以用来向控制台输出日志。你可以使用于Objective-C一样的语法来调用它。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%.7f"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 把 "3.1415927" 输出到控制台')]),t._v("\n")])])]),n("p",[t._v("Swift自身也提供了一个打印函数"),n("code",[t._v("print(_:)")]),t._v("。这个函数支持Swift的字符串插入，用法简单、强大而且通用。这个函数不会输出到系统控制台，但是可以满足常规的打印需求。")]),t._v(" "),n("p",[n("code",[t._v("NSAssert")]),t._v("系列函数没有被引入Swift。取而代之的是"),n("code",[t._v("assert")]),t._v("函数。")]),t._v(" "),n("h3",{attrs:{id:"core-foundation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#core-foundation"}},[t._v("#")]),t._v(" Core Foundation")]),t._v(" "),n("p",[t._v("Core Foundation类型会自动被导入为功能完备的Swift类。只要包含了内存管理的注解，Swift会自动管理Core Foundation对象的内存，包括你自己在代码中创建的Core Foundation对象。在Swift中，你可以互换使用Foundation和Core Foundation的无缝桥接(toll-free bridge)类型对。部分无缝桥接的Core Foundation类型，如果你先把它转换成Foundation类型，那么你还可以把它映射为Swift标准库中的类型。")]),t._v(" "),n("p",[t._v("（译者按：请注意区分Foundation与Core Foundation之间的无缝桥接(toll-free bridging)，以及Swift与Objective-C之间的桥接（bridging）。）")]),t._v(" "),n("h4",{attrs:{id:"重映射的类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#重映射的类型"}},[t._v("#")]),t._v(" 重映射的类型")]),t._v(" "),n("p",[t._v("当Swift导入Core Foundation类型时，编译器会对类型名进行重映射。编译器把"),n("em",[t._v("Ref")]),t._v("从名字的末尾去除了，因为所有的Swift类都是引用类型，因此这个词尾是多余的。")]),t._v(" "),n("p",[t._v("Core Foundation的"),n("code",[t._v("CFTypeRef")]),t._v("类型则完全被重映射为"),n("code",[t._v("AnyObject")]),t._v("类型。在你的代码中，所有以前使用"),n("code",[t._v("CFTypeRef")]),t._v("的地方，现在都要使用"),n("code",[t._v("AnyObject")]),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"受内存管理的对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#受内存管理的对象"}},[t._v("#")]),t._v(" 受内存管理的对象")]),t._v(" "),n("p",[t._v("从包含内存管理注解的API中返回的Core Foundation对象，Swift会自动对它们进行内存管理--你不需要自己手动调用"),n("code",[t._v("CFRetain")]),t._v("，"),n("code",[t._v("CFRelease")]),t._v("或"),n("code",[t._v("CFAutoRelease")]),t._v("函数。")]),t._v(" "),n("p",[t._v("如果你需要从你自己的C函数或Objective-C方法中返回Core Foundation对象，那么你就需要为它们添加"),n("code",[t._v("CF_RETURN_RETAINED")]),t._v("或"),n("code",[t._v("CF_RETURN_NOT_RETAINED")]),t._v("宏作为注解，以自动插入内存管理调用。你也可以根据Core Foundation的所属关系（ownership）策略，使用"),n("code",[t._v("CF_IMPLICIT_BRIDGING_ENABLED")]),t._v("和"),n("code",[t._v("CF_IMPLICIT_BRIDGING_DISABLED")]),t._v("宏来包围C函数声明，以通过命名方式来暗示内存管理机制。")]),t._v(" "),n("p",[t._v("如果你只需要用到包含了内存管理注解，且不会间接返回Core Foundation对象的API的话，你可以跳过本节的其它部分。否则请继续阅读关于如何操作不受内存管理对象的内容。")]),t._v(" "),n("h4",{attrs:{id:"不受管理的对象"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不受管理的对象"}},[t._v("#")]),t._v(" 不受管理的对象")]),t._v(" "),n("p",[t._v("当Swift导入不包含内存管理注解的API时，编译器无法对返回的Core Foundation对象进行自动内存管理。Swift会把这些返回的Core Foundation对象封装进"),n("code",[t._v("Unmanaged<Instance>")]),t._v("结构体中。所有间接返回的Core Foundation对象也是不受内存管理的。比如，下面这个未注解的C函数：")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[t._v("CFStringRef "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringByAddingTwoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFStringRef s1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFStringRef s2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("Swift会这样导入它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringByAddingTwoString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CFString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CFString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unmanaged")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CFString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当你从一个无注解的API接收到一个不受内存管理的对象时，在操作它之前，你应该马上把它转换成一个受内存管理的对象。这样，Swift帮你进行内存管理。"),n("code",[t._v("Unmanaged<Instance>")]),t._v("结构体提供了两个把不受内存管理的对象转换成受内存管理的对象的方法--"),n("code",[t._v("takeUnretainedValue()")]),t._v("和"),n("code",[t._v("takeRetainedValue()")]),t._v("。这两个方法都会返回原始的、解包过的类型的对象。你需要根据调用的API返回的对象是否为保留（retain）过，来选择使用哪个方法。")]),t._v(" "),n("p",[t._v("例如，假设上述C函数在返回之前没有保留（retain）过"),n("code",[t._v("CFString")]),t._v("对象。那么在操作这个对象之前，你需要使用"),n("code",[t._v("takeUnretainedValue()")]),t._v("方法。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" memoryManagedResult "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("StringByAddingTwoStrings")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" str2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeUnretainedValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// memoryManagedResult 是一个受内存管理的CFString对象。")]),t._v("\n")])])]),n("p",[t._v("你也可以对不受内存管理的对象调用"),n("code",[t._v("retain()")]),t._v("，"),n("code",[t._v("release()")]),t._v("和"),n("code",[t._v("autorelease()")]),t._v("方法，不过这种方式不受推荐。")]),t._v(" "),n("p",[t._v("要了解更多信息，请参阅“Memory Management Programming Guide for Core Foundation”文档。")]),t._v(" "),n("h2",{attrs:{id:"使用cocoa设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用cocoa设计模式"}},[t._v("#")]),t._v(" 使用Cocoa设计模式")]),t._v(" "),n("p",[t._v("要编写设计优秀，适应性良好的应用的一条准则是使用成熟的Cocoa设计模式。许多设计模式都依赖在Objective-C中定义的类。得益于Swift与Objective-C的互操作性，你可以在你的Swift代码中使用这些设计模式。而且在很多情况下，你还可以使用Swift的语言特性来增强或简化已有的Cocoa设计模式，使它们更加强大且更加易用。")]),t._v(" "),n("h3",{attrs:{id:"委托"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#委托"}},[t._v("#")]),t._v(" 委托")]),t._v(" "),n("p",[t._v("（译者注：这里把delegation翻译成委托，如果你学过.NET，请不要与.NET的委托混淆，两者是完全不同的概念。）")]),t._v(" "),n("p",[t._v("无论是在Swift还是Objective-C中，委托（delegation）模式通常是通过定义了交互方式的协议来表示的。类通过遵守协议来实现委托模式。在Objective-C中，在你向委托对象发送一个它可能无法响应的消息之前，你需要先询问委托对象是否可以响应这个方法选择器（selector）。在Swift中，你可以使用可选调用链来对可能为"),n("code",[t._v("nil")]),t._v("的对象触发一个可选的协议方法，然后通过使用"),n("code",[t._v("if-let")]),t._v("语法获得可能的返回结果。后面列出的代码展示了如下几个过程：")]),t._v(" "),n("ol",[n("li",[t._v("检查"),n("code",[t._v("myDelegate")]),t._v("是否"),n("strong",[t._v("不")]),t._v("为"),n("code",[t._v("nil")]),t._v("。")]),t._v(" "),n("li",[t._v("检查"),n("code",[t._v("myDelegate")]),t._v("是否实现了"),n("code",[t._v("window:willUseFullScreenContentSize:")]),t._v("方法。")]),t._v(" "),n("li",[t._v("如果1和2都为真，那么调用这个方法并将结果赋值给"),n("code",[t._v("fullScreenSize")]),t._v("。")]),t._v(" "),n("li",[t._v("打印方法的返回值。")])]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyDelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSWindowDelegate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("window")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSWindow")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" willUseFullScreenContentSize proposedSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSSize")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" proposedSize\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myDelegate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSWindowDelegate")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyDelegate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fullScreenSize "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" myDelegate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("window"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myWindow"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" willUseFullScreenContentSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("mySize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSStringFromSize")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fullScreenSize"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"懒惰初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#懒惰初始化"}},[t._v("#")]),t._v(" 懒惰初始化")]),t._v(" "),n("p",[t._v("一个"),n("em",[t._v("懒惰属性")]),t._v("（lazy property）是指其底层的值在首次访问的时候才被初始化的属性。懒惰属性在初始化时需要复杂运算，或者需要进行大运算量的设置，或者是实例初始化完成前无法确知的情况下非常有用。")]),t._v(" "),n("p",[t._v("在Objective-C中，属性可以覆盖取值方法的默认实现（synthesized getter），让属性对应的实例变量的值为"),n("code",[t._v("nil")]),t._v("的时候，才有条件地进行初始化：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" NSXMLDocument "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("XMLDocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSXMLDocument "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("XMLDocument "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_XMLDocument "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t_XMLDocument "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSXMLDocument alloc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithContentOfURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSBundle mainBundle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" URLForResource"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"/path/to/resource"')]),t._v(" withExtension"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"xml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _XMLDocument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在Swift中，带有初始值的存储属性（stored property）可以使用"),n("code",[t._v("lazy")]),t._v("修饰符声明，以让计算初始值的表达式在属性首次访问的时候才进行运算：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("XMLDocument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSXMLDocument")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSXMLDocument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("contentOfURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSBundle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mainBundle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("URLForResource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"document"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" withExtension"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"xml"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("懒惰属性在初次访问时才进行计算，而此时实例已经完成初始化，因此默认的初始化表达式可以访问实例的常量或变量属性：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" regex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSRegularExpression")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSRegularExpression")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("对于需要在初始化之后需要进行额外设置步骤的值，你可以给属性赋一个能够自我执行的，可以返回完整初始化值的闭包作为默认初始值：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lazy")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ISO8601DateFormatter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDateFormatter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" formatter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSDateFormatter")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tformatter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("localze "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLocale")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("localeIdentifier"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"en_US_POSIX"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tformatter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dateFormat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"yyyy-MM-dd'T'HH:mm:ssZZZZZ\"")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" formatter\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("如果一个懒惰属性尚未被初始化，且同时被多个线程访问，那么程序并不保证属性只被初始化一次。")])]),t._v(" "),n("p",[t._v("要了解更多信息，请查看“Swift编程语言（Swift 2.2版）”的“懒惰存储属性”部分。")]),t._v(" "),n("h3",{attrs:{id:"错误处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#错误处理"}},[t._v("#")]),t._v(" 错误处理")]),t._v(" "),n("p",[t._v("在Cocoa中，可能产生错误的方法会把"),n("code",[t._v("NSError")]),t._v("指针作为方法的最后一个参数，发生错误的时候，这个指针会指向一个"),n("code",[t._v("NSError")]),t._v("对象。Swift会自动把可能产生错误的Objective-C方法转译成可以抛出一个错误的方法，以配合Swift的原生错误处理功能使用。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[n("em",[t._v("处理")]),t._v("（consume）错误的方法（method），比如委托方法或接受一个包含"),n("code",[t._v("NSError")]),t._v("参数的完成代码块（completion handler）作为参数的方法，在导入Swift的时候不会被转译成可以抛出错误的方法。")])]),t._v(" "),n("p",[t._v("举个例子，请看下面来自"),n("code",[t._v("NSFileManager")]),t._v("类的Objective-C方法：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("removeItemAtURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("URL\n\t\t\t\t  error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("导入Swift时会变成这样：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeItemAtURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v("\n")])])]),n("p",[t._v("注意"),n("code",[t._v("removeItemAtURL(_:)")]),t._v("方法在导入Swift之后的返回类型变为"),n("code",[t._v("Void")]),t._v("，没有了"),n("code",[t._v("error")]),t._v("参数，但是包含了一个"),n("code",[t._v("throws")]),t._v("声明。")]),t._v(" "),n("p",[t._v("如果Objective-C方法的最后一个非代码块参数的类型为"),n("code",[t._v("NSError **")]),t._v("，Swift就会把它替换为"),n("code",[t._v("throws")]),t._v("关键词，以指示这个方法能抛出一个错误。如果Objective-C方法的错误参数是第一个参数，Swift会试图通过删除方法选择器第一部分的"),n("code",[t._v("WithError")]),t._v("或"),n("code",[t._v("AndReturnError")]),t._v("词尾（如果存在的话）来进一步简化方法名。如果得到的方法名已经被另一个方法所使用，那么这个方法名将不会改变。")]),t._v(" "),n("p",[t._v("如果能产生错误的Objective-C方法返回一个"),n("code",[t._v("BOOL")]),t._v("值，用于指示方法调用的成败，Swift会把方法的返回值改为"),n("code",[t._v("Void")]),t._v("。类似的，如果能产生错误的Objective-C方法通过返回一个"),n("code",[t._v("nil")]),t._v("值用来指示方法调用失败，那么Swift会把方法的返回类型改为返回一个非可选的类型。")]),t._v(" "),n("p",[t._v("否则，如果无法通过惯例来确定返回值，那么方法的返回值会保持原样。")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("对Objective-C的方法声明使用"),n("code",[t._v("NS_SWIFT_NOTHROW")]),t._v("宏来创建"),n("code",[t._v("NSError")]),t._v("，以防止方法在导入Swift时变成抛出错误的方法。")])]),t._v(" "),n("h4",{attrs:{id:"捕捉和处理错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捕捉和处理错误"}},[t._v("#")]),t._v(" 捕捉和处理错误")]),t._v(" "),n("p",[t._v("在Objective-C中，错误处理是可选的（opt-in），这意味着除非你传入了错误指针，否则方法调用产生的错误就会被忽略。在Swift中，调用抛出错误的方法时，必须进行显式的错误处理。")]),t._v(" "),n("p",[t._v("下面这个例子展示了在Objective-C中是如何处理方法调用时产生的错误的：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[t._v("NSFileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSFileManager defaultManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fromURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSURL fileURLWithPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"/path/to/old"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("toURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSURL fileURLWithPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"/path/to/new"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSError "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("error "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nBOOL success "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fileManager moveItemAtURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("fromURL toURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("toURL error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("success"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLog")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"Error: %@"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("下面是Swift中的等效代码：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSFileManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fromURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileURLWithPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/old"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" toURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileURLWithPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/path/to/new"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" fileManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveItem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fromURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" toURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" error "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSError")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error: '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("另外，你可以使用"),n("code",[t._v("catch")]),t._v("语句来匹配特定的错误代码，来区分不同的错误情况：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" fileManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("moveItemAtURL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fromURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" toURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" toURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSCocoaError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FileNoSuchFileError")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Error: no such file exists"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSCocoaError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("FileReadUnsupportedSchemeError")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Error: unsupported scheme (should be 'file://')\"")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"把错误转换成可选类型值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#把错误转换成可选类型值"}},[t._v("#")]),t._v(" 把错误转换成可选类型值")]),t._v(" "),n("p",[t._v("在Objective-C中，如果你只关心错误是否发生，而不关心发生的是什么错误，你可以传"),n("code",[t._v("NULL")]),t._v("给错误参数。在Swift中，你可以使用"),n("code",[t._v("try?")]),t._v("把一个抛出错误的表达式转换成一个返回可选类型值的方法，你可以随后检查返回值是否为"),n("code",[t._v("nil")]),t._v("。")]),t._v(" "),n("p",[t._v("例如，"),n("code",[t._v("NSFileManager")]),t._v("的实例方法："),n("code",[t._v("URLForDirectory(_:inDomain:appropriateForURL:create:)")]),t._v("，返回一个位于特定搜索路径和文件域（domain）下的URL；如果合适的URL不存在且无法创建，则产生一个错误。在Objective-C中，方法调用的成败可以通过检查返回值是否为一个"),n("code",[t._v("NSURL")]),t._v("对象来确定。")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[t._v("NSFileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("fileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSFileManager defaultManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tmpURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("fileManager URLForDirectory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSCachesDirectory inDomain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSUserDomainMask appropriateForURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES error"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tmpURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以使用如下Swift代码实现相同功能：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fileManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSFileManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("defaultManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" tmpURL "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" fileManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("URLForDirectory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CachesDirectory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" inDomain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UserDomainMask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" appropriateForURL"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" create"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h4",{attrs:{id:"抛出错误"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#抛出错误"}},[t._v("#")]),t._v(" 抛出错误")]),t._v(" "),n("p",[t._v("如果Objective-C方法中产生了错误，该方法的错误指针就会指向这个错误：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误发生时")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("errorPtr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("errorPtr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSError errorWithDomain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSURLErrorDomain\n\t\t\t\t\t\t\t\t\tcode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSURLErrorCannotOpenFile\n\t\t\t\t\t\t\t\tuserInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果在Swift方法中发生了错误，这个错误就会被抛出，并自动传递给调用者：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误发生时")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSURLErrorDomain")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSURLErrorCannotOpenFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("如果Objective-C代码调用了一个抛出错误的Swift方法，错误会自动传递给Objective-C桥接方法的错误指针参数。")]),t._v(" "),n("p",[t._v("例如，"),n("code",[t._v("NSDocument")]),t._v("类的"),n("code",[t._v("readFromFileWrapper(_:ofType:)")]),t._v("方法。在Objective-C中，这个方法的最后一个参数的类型时"),n("code",[t._v("NSError **")]),t._v("。当你在Swift中创建"),n("code",[t._v("NSDocument")]),t._v("的子类，覆盖这个方法时，方法会自动替换错误参数，并用抛出代替。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SerializedDocument")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDocument")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorDomain")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.example.error.serialized-document"')]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" representedObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFromFileWrapper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fileWrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSFileWrapper")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ofType typeName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fileWrapper"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("regularFileContents "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSURLErrorDomain")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSURLErrorCannotOpenFile")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONSerialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSONObjectWithData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("representedObject "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("domain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("SerializedDocument")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorDomain")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" code"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" userInfo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果方法无法使用文档的文件内容创建一个对象，它会抛出一个"),n("code",[t._v("NSError")]),t._v("对象。如果方法是在Swift代码中调用的，错误会被传递给它的调用作用域（calling scope）。如果方法是在Objective-C代码中调用的，错误就会传递给错误指针参数。")]),t._v(" "),n("p",[t._v("（译者按：原文中这段文字于本节开头第一段重复，这里不再翻译。）")]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("尽管Swift的错误处理与Objective-C的异常处理类似，但是这两个是完全不同的功能。如果Objective-C方法在运行时抛出异常，Swift会触发一个运行时错误。在Swift中是无法直接从Objective-C的异常中恢复的。所有的异常都必须在Swift调用的Objective-C代码实现中处理。")])]),t._v(" "),n("p",[t._v("（译者按：Swift和Objective-C的错误（error）类似于其他语言（例如Java，C#，Ruby，Python等）的异常，而Objective-C的异常（exception）则类似于其他语言的运行时错误（runtime error）。）")]),t._v(" "),n("h3",{attrs:{id:"键值观察"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#键值观察"}},[t._v("#")]),t._v(" 键值观察")]),t._v(" "),n("p",[t._v("键值观察（key-value observing）是一种能在指定的属性发生变化的时候通知其他对象的机制。只要Swift类是继承自"),n("code",[t._v("NSObject")]),t._v("的，它就可以使用键值观察。你可以通过如下三个步骤在Swift中实现键值观察。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("为你要观察的属性加上"),n("code",[t._v("dynamic")]),t._v("修饰符。要了解更多关于"),n("code",[t._v("dynamic")]),t._v("的信息，请查看"),n("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E5%8A%A8%E6%80%81%E5%88%86%E9%85%8D"}},[t._v("使用动态分配")]),t._v("章节。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyObjectToObserve")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("dynamic")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tmyDate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("创建一个全局上下文变量。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" myContext "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("为键路径（key-path）创建一个观察者，覆盖"),n("code",[t._v("observeValueForKeyPath:ofObject:change:context:")]),t._v("方法，并在"),n("code",[t._v("deinit")]),t._v("方法中移除观察者。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyObserver")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSObject")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" objectToObserve "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyObjectToObserve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tobjectToObserve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forKeyPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myDate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("New")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("override")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observeValueForKeyPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ofObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" change"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" context "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myContext "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newValue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" change"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSKeyValueChangeNewKey")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Date changed: '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("newValue"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("observeValueForKeyPath")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("keyPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ofObject"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" change"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" change"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("deinit")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tobjectToObserve"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeObserver")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" forKeyPath"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myDate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myContext"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"撤销"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#撤销"}},[t._v("#")]),t._v(" 撤销")]),t._v(" "),n("p",[t._v("在Cocoa中，你可以使用"),n("code",[t._v("NSUndoManager")]),t._v("注册一个操作，以允许用户撤掉该项操作。你可以像在Objective-C中一样，在Swift中使用Cocoa的撤销架构。")]),t._v(" "),n("p",[t._v("应用的响应链中的对象--也就是OS X中"),n("code",[t._v("NSResponder")]),t._v("和iOS中"),n("code",[t._v("UIResponder")]),t._v("的子类--都包含一个只读的"),n("code",[t._v("undoManager")]),t._v("属性，返回一个可选的"),n("code",[t._v("NSUndoManager")]),t._v("对象，这个对象管理应用的撤销栈（undo stack）。用户每触发一个动作，比如在控件中输入文本，或从列表中删除一个选中的行，就可以向撤销管理器（undo manager）注册一个撤销操作，以允许用户撤销这个操作的影响。撤销操作会记录回滚（conteract）操作所需的步骤，例如把控件的文本设定为其原始值，或把删除的项目重新加回列表中。")]),t._v(" "),n("p",[n("code",[t._v("NSUndoManager")]),t._v("支持两种注册撤销操作的方式：一种是“简单撤销”（simple undo），这种方式会执行一个带有一个对象参数方法。另一种是“基于动作对象的撤销”（invocation-based undo），这种方式能用可接受任意数量、任意类型参数的"),n("code",[t._v("NSInvocation")]),t._v("对象执行撤销操作。")]),t._v(" "),n("p",[t._v("（译者按：这里把Invocation翻译成“动作对象”。在Cocoa中，Invocation是一个封装为对象的方法，可以由其他对象用它触发一个预定义的动作。）")]),t._v(" "),n("p",[t._v("比如，有一个简单的"),n("code",[t._v("Task")]),t._v("模型，在"),n("code",[t._v("ToDoListController")]),t._v("中被用来展示一个需要完成的任务的列表：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Task")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" completed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" text\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ToDoListController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSViewController")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSTableViewDataSource")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSTableViewDelegate")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tableView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSTableView")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Task")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...\t")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Swift中定义的属性，你可以在"),n("code",[t._v("willSet")]),t._v("观察方法中，以"),n("code",[t._v("self")]),t._v("作为"),n("code",[t._v("target")]),t._v("，相应的Objective-C的赋值方法作为"),n("code",[t._v("selector")]),t._v("，并用当前的属性值作为"),n("code",[t._v("object")]),t._v("，创建一个撤销操作：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" notesLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSTextView")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" notes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("willSet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tundoManager"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("registerUndoWithTarget")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" selector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"setNotes:"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tundoManager"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setActionName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLocalizedString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"todo.notes.update"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Update Notes"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("didSet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tnotesLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" notes\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("对于接受多个参数的方法，你可以使用"),n("code",[t._v("NSInvocation")]),t._v("创建一个撤销操作，用于触发一个接受多个参数的方法，把应用恢复成操作前的状态：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token atrule"}},[t._v("@IBOutlet")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" remainingLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSTextView")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Task")]),t._v(" asComplete complete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Bool")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" undoManager"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("prepareWithInvocationTarget")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("TodoListController")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\ttarget"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("markTask")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" asComplete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("complete"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\tundoManager"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setActionName")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLocalizedString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"todo.task.mark"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Mark As Complete"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\ttask"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("completed "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" completed\n\ttableView"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reloadData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" numberRemaining "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tasks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" $"),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("complete "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("count")]),t._v("\n\tremainingLabel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSLocalizedString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"todo.taks.remaining"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" comment"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Tasks Remaining: %d"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" numberRemaining"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("prepareWithInvocationTarget(_:)方法返回指定")]),t._v("target"),n("code",[t._v("的代理对象。通过把它转成")]),t._v("ToDoListViewController"),n("code",[t._v("，使它能直接响应")]),t._v("markTask(_:asCompleted)`调用。")]),t._v(" "),n("p",[t._v("要了解更多信息，请参阅“The Undo Architecture Programming Guide”文档。")]),t._v(" "),n("h3",{attrs:{id:"目标-动作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目标-动作"}},[t._v("#")]),t._v(" 目标-动作")]),t._v(" "),n("p",[t._v("目标-动作（target-action）模式是Cocoa中一个常用的设计模式，这种模式下，在事件发生时，一个对象会发送消息给另一个对象。目标-动作模式在Swift和Objective-C中极其相似。在Swift中，你使用"),n("code",[t._v("Selector")]),t._v("类型来表示Objective-C的方法选择器。要查看关于目标-动作的Swift代码实例，请查看"),n("a",{attrs:{href:"#objective-c%E7%9A%84%E6%96%B9%E6%B3%95%E9%80%89%E6%8B%A9%E5%99%A8"}},[t._v("Objective-C的方法选择器")]),t._v("章节。")]),t._v(" "),n("h3",{attrs:{id:"单例模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#单例模式"}},[t._v("#")]),t._v(" 单例模式")]),t._v(" "),n("p",[t._v("单例模式能提供一个全局可用的、共享的对象实例。你可以通过创建一个单例，为整个应用共享的资源或服务提供一个统一的访问点。如，用来播放音效的音频通道、或管理HTTP请求的网络管理对象。")]),t._v(" "),n("p",[t._v("在Objective-C中，你可以通过把实例的初始化过程放在"),n("code",[t._v("dispatch_once")]),t._v("函数调用中，以确保单例对象只有一个实例，因为这个函数会执行一次代码块，并能确保在程序的生命周期内只执行一次：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("instancetype"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sharedInstance "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" id _sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" dispatch_once_t onceToken"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch_once")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("onceToken"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t_sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" alloc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _sharedInstance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在Swift中，你只需使用一个静态属性就能确保这个属性只被懒惰初始化一次，即使是在多个线程中被同时访问：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sharedInstance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("如果你需要在初始化时做一些额外的设置，你可以为这个全局常量赋值闭包的执行结果：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" sharedInstance "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Singleton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" instance "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Singleton")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置代码")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" instance\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("要了解更多信息，请查看“Swift编程语言（Swift 2.2版）”的“类型属性”章节。")]),t._v(" "),n("h3",{attrs:{id:"自省"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自省"}},[t._v("#")]),t._v(" 自省")]),t._v(" "),n("p",[t._v("在Objective-C中，你可以使用"),n("code",[t._v("isKindOfClass:")]),t._v("方法来检查对象是否属于某个类，用"),n("code",[t._v("conformsToProtocal:")]),t._v("方法来检查对象是否遵守某个协议。在Swift中，你使用"),n("code",[t._v("is")]),t._v("操作符来检查对象的类型，或者用"),n("code",[t._v("as?")]),t._v("操作符进行向下类型转换，以实现同样的功能。")]),t._v(" "),n("p",[t._v("你可以使用"),n("code",[t._v("is")]),t._v("操作符检查实例的类型是否为某个子类。如果实例属于该子类，"),n("code",[t._v("is")]),t._v("操作符返回"),n("code",[t._v("true")]),t._v("，否则返回"),n("code",[t._v("false")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" object "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIButton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object的类型是UIButton")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object的类型不是UIButton")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你也可以使用"),n("code",[t._v("as?")]),t._v("试着向下类型转换转成子类的对象。"),n("code",[t._v("as?")]),t._v("操作符会返回一个可选类型对象，然后就可以用"),n("code",[t._v("if-let")]),t._v("语句把值赋给一个常量。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" button "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" object "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UIButton")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象成功被转成UIButton类型，并被赋值给了button")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object无法转换成UIButton类型")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("要了解更多关于“类型转换”的信息，请查看“Swift编程语言（Swift 2.2版）”。")]),t._v(" "),n("p",[t._v("检查和转换成协议对象，与检查和转换类的对象使用完全相同的语法。下面就是一个使用"),n("code",[t._v("as?")]),t._v("操作符检查对象是否遵守协议的一个例子：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" dataSource "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" object "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewDataSource")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象遵守UITableViewDataSource协议，并复制给了dataSource")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 对象不遵守UITableViewDataSource协议")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("注意，在类型转换后，"),n("code",[t._v("dataSource")]),t._v("的类型是"),n("code",[t._v("UITableViewDataSource")]),t._v("，因此你只能对它调用在"),n("code",[t._v("UITableViewDataSource")]),t._v("协议中定义的方法和属性。要执行其他操作，你就必须把它转换回其他类型。")]),t._v(" "),n("p",[t._v("要了解更多信息，请查看“Swift编程语言（Swift 2.2版）”的“协议”章节。")]),t._v(" "),n("h3",{attrs:{id:"序列化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#序列化"}},[t._v("#")]),t._v(" 序列化")]),t._v(" "),n("p",[t._v("序列化能让你编码或解码应用中的对象，并把它们保存为平台无关的格式，如JSON或属性列表（property list）。你可以把这些格式的数据写入文件，或者传递给本地或网络上的其他进程。")]),t._v(" "),n("p",[t._v("在Objective-C中，你可以使用Foundation框架的"),n("code",[t._v("NSJSONSerialization")]),t._v("和"),n("code",[t._v("NSPropertyListSerialization")]),t._v("类，用一个解码过的JSON或属性列表值--通常是NSDictionary<NSString *, id>对象--进行对象的初始化。在Swift中，你也可以如法炮制。但因为Swift是类型安全的语言，在取值和赋值的时候，你需要进行额外的类型转换操作。")]),t._v(" "),n("p",[t._v("例如，下面的这个"),n("code",[t._v("Venue")]),t._v("结构体，包含一个"),n("code",[t._v("String")]),t._v("类型的"),n("code",[t._v("name")]),t._v("属性，一个"),n("code",[t._v("CLLocationCoordinate2D")]),t._v("类型的"),n("code",[t._v("coordinate")]),t._v("属性，和一个内嵌的"),n("code",[t._v("Category")]),t._v("枚举类型的"),n("code",[t._v("category")]),t._v("属性：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Foundation")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CoreLocation")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Venue")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Category")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Entertainmant")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Food")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Nightlife")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Shopping")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" coordinate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CLLocationCoordinate2D")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" category"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Category")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("假设某个应用能处理"),n("code",[t._v("Venue")]),t._v("实例。应用在和网络服务器通讯的时候，获得了JSON格式的地点数据，如下：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Caffe Macs"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lat"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.330576")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lng"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-122.029739")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Food"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以编写一个可失败的构造方法（failable initializer），这个方法接受一个类型为"),n("code",[t._v("[String: AnyObject]")]),t._v("的"),n("code",[t._v("attributes")]),t._v("参数，对应通过"),n("code",[t._v("NSJSONSerialization")]),t._v("或"),n("code",[t._v("NSPropertyListSerialization")]),t._v("类返回的值。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" coordinates "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinates"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" latitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" coordinate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lat"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" longitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" coordinate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lng"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" category "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Caterogy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rawValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coordinate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLLocationCoordinate2D")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("latitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" longitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" longitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("包含多个可选值绑定表达式（optional-binding expression）的"),n("code",[t._v("guard")]),t._v("语句保证了"),n("code",[t._v("attributes")]),t._v("参数从预期的文件格式中获得了所有必要的信息。如果任意一个可选类型值的绑定表达式在为常量赋值时失败了，"),n("code",[t._v("guard")]),t._v("语句会立刻停止执行其他语句，并转跳到"),n("code",[t._v("else")]),t._v("分支，返回"),n("code",[t._v("nil")]),t._v("。")]),t._v(" "),n("p",[t._v("你现在就可以用一组JSON格式的数据，通过"),n("code",[t._v("NSJSONSerialization")]),t._v("类创建的对象，传给"),n("code",[t._v("Venue")]),t._v("的构造方法来创建"),n("code",[t._v("venue")]),t._v("对象了：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"name\\": \\"Caffe Macs\\", \\"coordinates\\": {\\"lat\\": 37.330576, \\"lng\\": -122.029739 }, \\"category\\": \\"Food\\"}"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataUsingEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSUTF8StringEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" attributes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONSerialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSONObjectWithData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" venue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Venue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attrubutes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("venue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印出“Caffe Macs”")]),t._v("\n")])])]),n("h4",{attrs:{id:"验证序列化数据"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#验证序列化数据"}},[t._v("#")]),t._v(" 验证序列化数据")]),t._v(" "),n("p",[t._v("在前面的例子中，"),n("code",[t._v("Venue")]),t._v("的构造函数在所有必须的信息都提供的情况下，可选地返回一个实例。否则，构造器会简单的返回"),n("code",[t._v("nil")]),t._v("。")]),t._v(" "),n("p",[t._v("如果可以知道一组给定的数据为何不能创建有效实例的原因的话，通常会很有用。要实现这一点，你需要把这个可失败的构造方法重构为一个可抛出错误的构造方法：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorType")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Missing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invalid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Missiong")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" coordinates "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attrubutes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinates"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Double")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Missing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\t\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" latitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" coordinate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lat"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" longitude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" coordinate"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lng"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invalid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"coordinate"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" categoryName "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Missing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" category "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Category")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rawValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" categoryName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invalid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("coordinate "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLLocationCoordinate2D")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("latitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" longitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" longitude"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("category "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" category\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这个构造方法没有只用一条"),n("code",[t._v("guard")]),t._v("语句处理所有"),n("code",[t._v("attributes")]),t._v("的值，而是分别检查了每个值，并在值不存在或不合法的时候抛出一个错误。")]),t._v(" "),n("p",[t._v("例如，如果JSON没有包含键为"),n("code",[t._v("name")]),t._v("的值，那么这个构造方法会抛出"),n("code",[t._v("ValicationError.Missing")]),t._v("枚举值，并把对应的"),n("code",[t._v('"name"')]),t._v("字段作为枚举的关联值（associated value）：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lat"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.77492")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lng"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-122.419")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shopping"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"coordinates\\": {\\"lat\\": 37.77492, \\"lng\\": -122.419 }, \\"category\\": \\"Shopping\\"}"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataUsingEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSUTF8StringEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" attributes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONSerialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSONObjectWithData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" venue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Venue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Missing")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" field"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Missing Field: '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("field"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “Missing Field: name”")]),t._v("\n")])])]),n("p",[t._v("如果JSON包含了所有必需的字段，但是"),n("code",[t._v('"category"')]),t._v("键的值不匹配"),n("code",[t._v("Category")]),t._v("枚举中定义的值的"),n("code",[t._v("rawValue")]),t._v("，那么这个构造方法会抛出"),n("code",[t._v("ValicationError.Invalid")]),t._v("枚举值，并把对应的"),n("code",[t._v('"category"')]),t._v("字段作为枚举的关联值：")]),t._v(" "),n("div",{staticClass:"language-json extra-class"},[n("pre",{pre:!0,attrs:{class:"language-json"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Moscone West"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"coordinates"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lat"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("37.7842")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lng"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("-122.4016")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token property"}},[t._v('"category"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Convention Center"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{\\"name\\": \\"Moscone West\\", \\"coordinates\\": {\\"lat\\": 37.7842, \\"lng\\": -122.4016 }, \\"category\\": \\"Convention Center\\"}"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dataUsingEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSUTF8StringEncoding")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" attributes "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONSerialization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("JSONObjectWithData")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AnyObject")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" venue "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Venue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" attributes"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ValidationError")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Invalid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" field"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid Field: '),n("span",{pre:!0,attrs:{class:"token interpolation"}},[n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v("\\(")]),t._v("field"),n("span",{pre:!0,attrs:{class:"token delimiter variable"}},[t._v(")")])]),t._v('"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “Invalid Field: category")]),t._v("\n")])])]),n("h3",{attrs:{id:"api可用性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#api可用性"}},[t._v("#")]),t._v(" API可用性")]),t._v(" "),n("p",[t._v("某些类和方法并非在应用支持的所有版本和所有平台上都可用。要保证应用能够应对任何功能缺失，你需要检查API的可用性。")]),t._v(" "),n("p",[t._v("在Objective-C中，我们使用"),n("code",[t._v("respondesToSelector:")]),t._v("和"),n("code",[t._v("instancesRespondToSelector:")]),t._v("方法来检查类方法或实例方法的可用性。如果不检查，方法调用会抛出"),n("code",[t._v("NSInvalidArgumentException")]),t._v("，“unrecognized selector sent to instance”（向实例发送了无法识别的方法选择器）异常。例如，"),n("code",[t._v("CLLocationManager")]),t._v("的"),n("code",[t._v("requestWhenInUseAuthorization")]),t._v("实例方法从iOS 8.0和OS X 10.0才开始可用：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CLLocationManager instancesRespondToSelector"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestWhenInUseAuthorization"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法可用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 方法不可用")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在Swift中，调用一个不是在所有目标平台和版本上都可用的方法会引发一个编译时错误。")]),t._v(" "),n("p",[t._v("下面是前述例子的Swift代码：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" locationManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLLocationManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlocationManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestWhenInUseAuthorization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 错误：只在iOS 8.0或更新的系统中可用。")]),t._v("\n")])])]),n("p",[t._v("如果应用的目标iOS版本早于8.0，目标OS X的版本早于10.0，"),n("code",[t._v("requestWhenInUseAuthorization()")]),t._v("方法是不可用的，那么编译器会汇报一个错误。")]),t._v(" "),n("p",[t._v("Swift代码可以在运行时检查API可用性。可用性检查可以在"),n("code",[t._v("if")]),t._v("，"),n("code",[t._v("guard或")]),t._v("when`等条件语句中使用。")]),t._v(" "),n("p",[t._v("再回到前面的例子，你可以使用"),n("code",[t._v("if")]),t._v("语句检查可用性，让"),n("code",[t._v("requestWhenAvailableAuthorization")]),t._v("方法在运行时可用时才执行：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" locationManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLLocationManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" #"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OSX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tlocationManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestWhenInUseAuthorization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\t\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你也可以使用"),n("code",[t._v("guard")]),t._v("语句检查可用性，除非当前的运行平台满足要求，否则跳出代码块。这种方法简化了判断不同平台能力的处理逻辑。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" locationManager "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CLLocationManager")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" #"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OSX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nlocationManager"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("requestWhenInUseAuthorization")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("每个平台的参数都包含下面列出的其中一个平台名，后面跟上相应的版本号。最后一个参数是星号（"),n("code",[t._v("*")]),t._v("），用来支持未来可能出现的新平台。")]),t._v(" "),n("p",[n("em",[t._v("平台名")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("iOS")])]),t._v(" "),n("li",[n("code",[t._v("iOSApplicationExtension")])]),t._v(" "),n("li",[n("code",[t._v("OSX")])]),t._v(" "),n("li",[n("code",[t._v("OSXApplicationExtension")])]),t._v(" "),n("li",[n("code",[t._v("watchOS")])]),t._v(" "),n("li",[n("code",[t._v("watchOSApplicationExtension")])]),t._v(" "),n("li",[n("code",[t._v("tvOS")])]),t._v(" "),n("li",[n("code",[t._v("tvOSApplicationExtension")])])]),t._v(" "),n("p",[t._v("所有的Cocoa API都已经包含了可用性信息，因此你可以确信你编写的代码能按照预期在支持的平台上正确运行。")]),t._v(" "),n("p",[t._v("你也可以使用"),n("code",[t._v("@available")]),t._v("注解为你的API标注可用性信息。"),n("code",[t._v("@available")]),t._v("注解使用与"),n("code",[t._v("#available")]),t._v("运行时检查相同的语法，以一系列逗号分隔的平台和版本号要求作为参数。")]),t._v(" "),n("p",[t._v("例如：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("@"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("available")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iOS "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OSX")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("useShinyNewFeature")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("有"),n("code",[t._v("@available")]),t._v("注解的方法可以安全的使用对其指定的平台要求可用的API，而无需额外进行显式地API可用性检查。")])]),t._v(" "),n("h3",{attrs:{id:"处理命令行参数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#处理命令行参数"}},[t._v("#")]),t._v(" 处理命令行参数")]),t._v(" "),n("p",[t._v("在OS X上，你通常是通过单击Dock或LaunchPad上的应用图标、或双击Finder中的应用图标来打开一个应用的。不过，你也可以从终端用程序打开一个应用，并给它传递命令行参数。")]),t._v(" "),n("p",[t._v("你可以通过访问"),n("code",[t._v("Process.arguments")]),t._v("类属性来得到一个包含了所有在启动时指定的命令行参数的列表。这种方式与访问"),n("code",[t._v("NSProcessInfo.processInfo()")]),t._v("的"),n("code",[t._v("argument")]),t._v("属性是等效的。")]),t._v(" "),n("blockquote",[n("p",[n("code",[t._v("$ /path/to/app --argumentName value")])])]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" argument "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Process")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("arguments "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("argument"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “/path/to/app”")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “--argumentName”")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “value”")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[n("code",[t._v("Process.arguments")]),t._v("的第一个元素总是可执行文件的路径。启动时指定的命令行参数是从"),n("code",[t._v("Process.arguments[1]")]),t._v("开始的。")])]),t._v(" "),n("h2",{attrs:{id:"与c语言api交互"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#与c语言api交互"}},[t._v("#")]),t._v(" 与C语言API交互")]),t._v(" "),n("p",[t._v("作为与Objective-C互操作性的一部分，Swift保持了与C语言的部分类型和特性的兼容性。Swift还提供了操作常见的C语言结构和模式的方法，以便你在编码时需要用到它。")]),t._v(" "),n("h3",{attrs:{id:"基本类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),n("p",[t._v("Swift提供了与C语言基本整数类型等价的类型--比如，"),n("code",[t._v("char")]),t._v("，"),n("code",[t._v("int")]),t._v("，"),n("code",[t._v("float")]),t._v("，和"),n("code",[t._v("double")]),t._v("。不过这些类型不会通过隐式转换转成Swift的整型，如"),n("code",[t._v("Int")]),t._v("。因此，只有在你的代码对这些类型有特殊需求时才使用它们，否则，请总是使用"),n("code",[t._v("Int")]),t._v("。")]),t._v(" "),n("table",[n("tr",[n("td",[n("strong",[t._v("C类型")])]),n("td",[n("strong",[t._v("Swift类型")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("bool")])]),n("td",[n("code",[t._v("CBool")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("char")]),t._v(", "),n("code",[t._v("signed char")])]),n("td",[n("code",[t._v("CChar")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("unsigned char")])]),n("td",[n("code",[t._v("CUnsignedChar")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("short")])]),n("td",[n("code",[t._v("CShort")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("unsigned short")])]),n("td",[n("code",[t._v("CUnsignedShort")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("int")])]),n("td",[n("code",[t._v("CInt")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("unsigned int")])]),n("td",[n("code",[t._v("CUnsignedInt")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("long")])]),n("td",[n("code",[t._v("CLong")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("unsigned long")])]),n("td",[n("code",[t._v("CUnsignedLong")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("long long")])]),n("td",[n("code",[t._v("CLongLong")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("unsigned long long")])]),n("td",[n("code",[t._v("CUnsignedLongLong")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("wchar_t")])]),n("td",[n("code",[t._v("CWideChar")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("char16_t")])]),n("td",[n("code",[t._v("CChar16")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("char32_t")])]),n("td",[n("code",[t._v("CChar32")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("float")])]),n("td",[n("code",[t._v("CFloat")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("double")])]),n("td",[n("code",[t._v("CDouble")])])])]),t._v(" "),n("h3",{attrs:{id:"枚举类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[t._v("#")]),t._v(" 枚举类型")]),t._v(" "),n("p",[t._v("Swift会把用"),n("code",[t._v("NS_ENUM")]),t._v("宏创建的C枚举类型导入为以"),n("code",[t._v("Int")]),t._v("作为其原始值类型的Swift的枚举类型。不管是在系统框架还是在自定义代码中创建的枚举，C枚举类型的成员名的前缀在导入Swift的时候会被移除。")]),t._v(" "),n("p",[t._v("例如，下面这个枚举类型是用"),n("code",[t._v("NS_ENUM")]),t._v("声明的C枚举。")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NS_ENUM")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSInteger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" UITableViewCellStyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tUITableViewCellStyleDefault"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tUITableViewCellStyleValue1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tUITableViewCellStyleValue2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tUITableViewCellStyleSubtitle\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Swift会把它导入成这样：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewCellStyle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Default")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Value1")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Value2")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Subtitle")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当你使用枚举值的时候，你在值的名字前加上一个点（"),n("code",[t._v(".")]),t._v("）")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cellStyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UITableViewCellStyle")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Default")]),t._v("\n")])])]),n("p",[t._v("不是用NS_ENUM或NS_OPTIONS宏标记的C的枚举类型会被Swift导入为结构体。C枚举的每个成员都被导入为一个类型为该结构体的全局只读计算属性--而不是成为Swift结构体的成员。")]),t._v(" "),n("p",[t._v("例如，下面这个C枚举不是用"),n("code",[t._v("NS_ENUM")]),t._v("宏声明的。")]),t._v(" "),n("div",{staticClass:"language-c extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tErrorNone "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tErrorFileNotFound "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tErrorInvalidFormat "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Swift会把它导入成这样：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Error")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("RawRepresentable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Equatable")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorNone")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Error")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorFileNotFound")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Error")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("ErrorInvalidFormat")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Error")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Swift会为导入的C枚举类型自动生成遵守"),n("code",[t._v("Equatable")]),t._v("协议的实现代码。")]),t._v(" "),n("h3",{attrs:{id:"选项集"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#选项集"}},[t._v("#")]),t._v(" 选项集")]),t._v(" "),n("p",[t._v("Swift也会把用"),n("code",[t._v("NS_OPTIONS")]),t._v("宏标记的C语言枚举类型，导入为Swift的选项集（option set）。选项集与枚举类型一样，导入后会移除选项值名字中的前缀。")]),t._v(" "),n("p",[t._v("比如，下面这个Objective-C选项声明：")]),t._v(" "),n("div",{staticClass:"language-objc extra-class"},[n("pre",{pre:!0,attrs:{class:"language-objc"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NSOPTIONS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSUInteger"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" NSJSONReadingOptions"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tNSJSONReadingOptionsMutableContainers "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1UL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tNSJSONReadingOptionsMutableLeaves "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1UL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tNSJSONReadingOptionsAllowFragments "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1UL")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("Swift会把它导入成这样：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONReadingOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("OptionSetType")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("init")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rawValue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UInt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MutableContainers")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONReadingOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("MutableLeaves")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONReadingOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AllowFragments")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSJSONReadingOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("在Objective-C中，选项集是一个位掩码的整数值。你使用按位或（bitwise OR）操作符（"),n("code",[t._v("|")]),t._v("）来组合选项值，用按位与（bitwise AND）操作符（"),n("code",[t._v("&")]),t._v("）来检查选项值。你可以用一个常量或表达式创建一个新的选项集，空的选项集用常数零（"),n("code",[t._v("0")]),t._v("）来表示。")]),t._v(" "),n("p",[t._v("在Swift中，选项集用遵守"),n("code",[t._v("OptionalSetType")]),t._v("协议的结构体表示，选项用静态成员表示。选项集的行为与Swift的"),n("code",[t._v("Set")]),t._v("集合类型类似。你可以使用"),n("code",[t._v("insert(_:)")]),t._v("或"),n("code",[t._v("unionInPlace(_:)")]),t._v("方法添加选项值，使用"),n("code",[t._v("remove(_:)")]),t._v("或"),n("code",[t._v("substractInPlace(_:)")]),t._v("方法移除选项值，使用"),n("code",[t._v("contains(_:)")]),t._v("方法检查选项值。你可以使用一个数组字面量创建一个选项集，使用类似枚举类型的点（"),n("code",[t._v(".")]),t._v("）前缀来访问选项值。空的选项值可以用一个空的数组字面量（"),n("code",[t._v("[]")]),t._v("）或默认构造方法创建。")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDataBase64EncodingOptions")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Encoding76CharacterLineLength")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("EncodingEndLineWithLineFeed")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" string "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("base64EncodedStringWithOptions")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"共用体"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#共用体"}},[t._v("#")]),t._v(" 共用体")]),t._v(" "),n("p",[t._v("Swift仅部分支持C语言的"),n("code",[t._v("union")]),t._v("（共用体）类型。导入包含共用体的C的聚合数据类型（C aggregates）时，Swift是无法访问不受支持的字段的。不过如果C或Objective-C API的参数或返回值包含共用体类型，那么它们是可以在Swift中使用的。")]),t._v(" "),n("p",[t._v("（译者按：C aggregates翻译为“聚合数据类型”参考了"),n("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BB%93%E6%9E%84%E4%BD%93_%28C%E8%AF%AD%E8%A8%80%29",target:"_blank",rel:"noopener noreferrer"}},[t._v("维基百科"),n("OutboundLink")],1),t._v("）")]),t._v(" "),n("h3",{attrs:{id:"位域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#位域"}},[t._v("#")]),t._v(" 位域")]),t._v(" "),n("p",[t._v("Swift把结构体的位域（bit field），比如Foundation框架的"),n("code",[t._v("NSDecimal")]),t._v("类型中能找到的那些，导入为计算属性。当访问对应某个位域的计算属性时，Swift会自动把该值与兼容的Swift类型互相转换。")]),t._v(" "),n("p",[t._v("（译者按：位域是一种特殊的结构体。）")]),t._v(" "),n("h3",{attrs:{id:"未命名结构体和未命名共用体字段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#未命名结构体和未命名共用体字段"}},[t._v("#")]),t._v(" 未命名结构体和未命名共用体字段")]),t._v(" "),n("p",[t._v("C的结构体和共用体类型可能会定义未命名的结构体和共用体类型的字段。Swift不支持未命名的结构体，因此这些字段被导入为形如"),n("code",[t._v("__Unnamed_fieldName")]),t._v("这种名字的嵌套类型。")]),t._v(" "),n("p",[t._v("例如，如下C名为"),n("code",[t._v("Pie")]),t._v("的结构体包含一个未命名的结构体类型"),n("code",[t._v("crust")]),t._v("的字段，和一个未命名的共用体类型的"),n("code",[t._v("filling")]),t._v("字段：")]),t._v(" "),n("div",{staticClass:"language-C extra-class"},[n("pre",{pre:!0,attrs:{class:"language-c"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pie")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" bool flakey"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" crust"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("union")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" fruit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" meat"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" filling"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("当这个结构体导入Swift时，"),n("code",[t._v("crust")]),t._v("属性的类型为"),n("code",[t._v("Pie.__Unnamed_crust")]),t._v("，而"),n("code",[t._v("filling")]),t._v("属性的类型则为"),n("code",[t._v("Pie.__Unnamed_filling")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#指针"}},[t._v("#")]),t._v(" 指针")]),t._v(" "),n("p",[t._v("只要有可能，Swift就会避免让你直接使用指针。不过，如果你确实需要直接访问内存，那么你还是有很多指针类型可以使用的。下面的几个表格使用"),n("code",[t._v("Type")]),t._v("作为类型名的占位符，用来展示指针类型的映射语法。")]),t._v(" "),n("p",[t._v("对于返回类型、变量和参数中的指针，应用如下映射规则：")]),t._v(" "),n("table",[n("td",[n("strong",[t._v("C语法")])]),n("td",[n("strong",[t._v("Swift语法")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("const Type *")])]),n("td",[n("code",[t._v("UnsafePointer<Type>")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Type *")])]),n("td",[n("code",[t._v("UnsafeMutablePointer<Type>")])])])]),t._v(" "),n("p",[t._v("对于类的指针，应用如下映射规则：")]),t._v(" "),n("table",[n("td",[n("strong",[t._v("C语法")])]),n("td",[n("strong",[t._v("Swift语法")])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Type * const *")])]),n("td",[n("code",[t._v("UnsafePointer<Type>")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Type * __strong *")])]),n("td",[n("code",[t._v("UnsafeMutablePointer<Type>")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("Type **")])]),n("td",[n("code",[t._v("AutoreleasingUnsafeMutablePointer<Type>")])])])]),t._v(" "),n("h4",{attrs:{id:"常指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常指针"}},[t._v("#")]),t._v(" 常指针")]),t._v(" "),n("p",[t._v("当函数声明了接受一个"),n("code",[t._v("UnsafePointer<Type>")]),t._v("参数时，它可以接受下面这几种类型的参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("nil")]),t._v("，传入一个空指针。")]),t._v(" "),n("li",[n("code",[t._v("UnsafePointer<Type>")]),t._v("，"),n("code",[t._v("UnsafeMutablePointer<Type>")]),t._v("，或"),n("code",[t._v("AutoreleasingUnsafeMutablePointer<Type>")]),t._v("值，在必要的时候会转换成"),n("code",[t._v("UnsafePointer<Type>")]),t._v("。")]),t._v(" "),n("li",[n("code",[t._v("String")]),t._v("值，如果"),n("code",[t._v("Type")]),t._v("是"),n("code",[t._v("Int8")]),t._v("或"),n("code",[t._v("UInt8")]),t._v("，字符串会自动转换成UTF8编码，保存到缓存中，直到调用结束。")]),t._v(" "),n("li",[t._v("左手侧操作数的类型为"),n("code",[t._v("Type")]),t._v("的"),n("code",[t._v("inout")]),t._v("表达式，会传入左手侧标识符的地址。")]),t._v(" "),n("li",[n("code",[t._v("[Type]")]),t._v("值，会传入数组开始位置的指针，数组的生命周期被延长至整个调用的周期。")])]),t._v(" "),n("p",[t._v("假设你声明了如下函数：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以通过下面几种方式来调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("当函数声明了接受一个"),n("code",[t._v("UnsafePointer<Void>")]),t._v("参数，它可以接受与"),n("code",[t._v("UnsafePointer<Type>")]),t._v("相同的操作数，"),n("code",[t._v("Type")]),t._v("可以是任何类型。")]),t._v(" "),n("p",[t._v("假设你声明了如下函数：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以通过下面几种方式来调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" intArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intArray"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h4",{attrs:{id:"可变指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可变指针"}},[t._v("#")]),t._v(" 可变指针")]),t._v(" "),n("p",[t._v("当函数声明了接受一个"),n("code",[t._v("UnsafeMutablePointer<Type>")]),t._v("参数时，它可以接受下面这几种类型的参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("nil")]),t._v("，传入一个空指针。")]),t._v(" "),n("li",[n("code",[t._v("UnsafeMutablePointer<Type>")]),t._v("值。")]),t._v(" "),n("li",[t._v("左值的类型为"),n("code",[t._v("Type")]),t._v("的"),n("code",[t._v("inout")]),t._v("表达式，会传入左值的地址。")]),t._v(" "),n("li",[n("code",[t._v("inout [Type]")]),t._v("值，会传入数组开始位置的指针，数组的生命周期被延长至整个调用的周期。")])]),t._v(" "),n("p",[t._v("假设你声明了如下函数：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutablePointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以通过下面几种方式来调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("当函数声明了接受一个"),n("code",[t._v("UnsafeMutablePointer<Void>")]),t._v("参数，它可以接受与"),n("code",[t._v("UnsafeMutablePointer<Type>")]),t._v("相同的操作数，"),n("code",[t._v("Type")]),t._v("可以是任何类型。")]),t._v(" "),n("p",[t._v("假设你声明了如下函数：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以通过下面几种方式来调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("y"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAMutableVoidPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h4",{attrs:{id:"自动释放指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自动释放指针"}},[t._v("#")]),t._v(" 自动释放指针")]),t._v(" "),n("p",[t._v("当函数声明了接受一个"),n("code",[t._v("AutoreleasingUnsafeMutablePointer<Type>")]),t._v("参数时，它可以接受下面这几种类型的参数：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("nil")]),t._v("，传入一个空指针。")]),t._v(" "),n("li",[n("code",[t._v("AutoreleasingUnsafeMutablePointer<Type>")]),t._v("值。")]),t._v(" "),n("li",[n("code",[t._v("inout")]),t._v("表达式，其操作数会通过基础拷贝到一个临时的不拥有的（nonowning）缓存区。缓存区的地址接着传给被调用者，返回时，缓存区内的值被加载、保留（retain）并重新赋值给操作数。")])]),t._v(" "),n("p",[t._v("注意，上面的列表中不包含数组。")]),t._v(" "),n("p",[t._v("假设你声明了如下函数：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAnAutoreleasingUnsafeMutalbePointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AutoreleasingUnsafeMutalbePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("你可以通过下面几种方式来调用它：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("AutoreleasingUnsafeMutalbePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("NSDate")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("takeAPointer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("被指向的类型不会被桥接。例如，"),n("code",[t._v("NSString **")]),t._v("导入Swift的时候，是"),n("code",[t._v("AutoreleasingUnsafeMutalbePointer<NSString?>")]),t._v("，不是"),n("code",[t._v("AutoreleasingUnsafeMutalbePointer<String?>")]),t._v("。")]),t._v(" "),n("h4",{attrs:{id:"函数指针"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#函数指针"}},[t._v("#")]),t._v(" 函数指针")]),t._v(" "),n("p",[t._v("C函数指针会作为闭包导入Swift，闭包遵循C函数指针的调用惯例，并以"),n("code",[t._v("@convention(c)")]),t._v("注解标记。例如，一个类型为"),n("code",[t._v("int(*)(void)")]),t._v("的C函数指针导入Swift后成为"),n("code",[t._v("@convention(c) () -> Int32")]),t._v("。")]),t._v(" "),n("p",[t._v("调用接受函数指针作为参数的函数时，你可以传一个顶层（top-level）的Swift函数，一个闭包字面量或"),n("code",[t._v("nil")]),t._v("。以Core Foundation的"),n("code",[t._v("CFArrayCreateMutable(_:_:_:)")]),t._v("函数作为例子，"),n("code",[t._v("CFArrayCreateMutable(_:_:_:)")]),t._v("接受一个"),n("code",[t._v("CFArrayCallBacks")]),t._v("结构体，这个结构体在初始化时需要函数指针用于回调：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("customCopyDescription")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Void")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Unmanaged")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CFString")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回一个Unmanaged<CFString>!值")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" callbacks "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFArrayCallBacks")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tversion"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tretain"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\trelease"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tcopyDescription"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" customCopyDescription"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("equal")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("DarwinBoolean")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回Bool值")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" mutableArray "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFArrayCreateMutable")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("callbacks"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[t._v("上面这个例子中，"),n("code",[t._v("CFArrayCallBacks")]),t._v("构造方法用"),n("code",[t._v("nil")]),t._v("作为"),n("code",[t._v("retain")]),t._v("和"),n("code",[t._v("release")]),t._v("参数，"),n("code",[t._v("customCopyDescription")]),t._v("函数作为"),n("code",[t._v("copyDescription")]),t._v("参数，一个闭包字面量作为"),n("code",[t._v("equal")]),t._v("参数。")]),t._v(" "),n("h3",{attrs:{id:"数据类型大小计算"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据类型大小计算"}},[t._v("#")]),t._v(" 数据类型大小计算")]),t._v(" "),n("p",[t._v("在C语言中，"),n("code",[t._v("sizeof")]),t._v("操作符可以返回任何变量和数据类型的大小。在Swift中，你可以使用"),n("code",[t._v("sizeof")]),t._v("函数来获取给定类型的大小，或者"),n("code",[t._v("sizeofValue")]),t._v("函数来获取给定值的大小。不过和C的"),n("code",[t._v("sizeof")]),t._v("操作符不同的是，Swift的"),n("code",[t._v("sizeof")]),t._v("和"),n("code",[t._v("sizeofValue")]),t._v("函数不包含内存对齐必需的内存衬底（padding）。例如，Darwin中的"),n("code",[t._v("timeval")]),t._v("结构体，在C语言中得到的大小是16字节，在Swift中得到的大小是12字节：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sizeof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “12”")]),t._v("\n")])])]),n("p",[t._v("要获得计算了数据结构内存对齐，与C语言的"),n("code",[t._v("sizeof")]),t._v("操作符的输出一致的值，你可以使用"),n("code",[t._v("strideof")]),t._v("或"),n("code",[t._v("strideofValue")]),t._v("函数替代：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strideof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印 “16”")]),t._v("\n")])])]),n("p",[t._v("例如，"),n("code",[t._v("setsockopt")]),t._v("函数能接受"),n("code",[t._v("timeval")]),t._v("值的指针和大小作为参数，用作作套接字（socket）接收超时选项（SO_RCVTIMEO），这里的大小值就是通过"),n("code",[t._v("strideof")]),t._v("来计算的：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" socketfd "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("socket")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AF_INET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SOCK_STREAM")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" optval "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("timeval")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tv_sec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tv_usec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" optlen "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("socklen_t")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("strideof")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setsockopt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sockfd"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SOL_SOCKET")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SO_RCVTIMEO")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("optval"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" optlen"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[t._v("只有符合C函数引用调用惯例的Swift函数能被用作函数指针参数。与C的函数指针一样，有"),n("code",[t._v("@convention(c)")]),t._v("注解的Swift函数类型不会捕获周围作用域的上下文环境。")]),t._v(" "),n("p",[t._v("要了解更多信息，请参阅“Swift编程语言（Swift 2.2版）”的“类型参数”章节。")])]),t._v(" "),n("h3",{attrs:{id:"可变参数函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#可变参数函数"}},[t._v("#")]),t._v(" 可变参数函数")]),t._v(" "),n("p",[t._v("在Swift中你可以使用"),n("code",[t._v("getVaList(_:)")]),t._v("或"),n("code",[t._v("withVaList(_:_:)")]),t._v("函数，调用C语言中的可变参数函数，例如"),n("code",[t._v("vasprintf")]),t._v("。"),n("code",[t._v("getVaList(_:)")]),t._v("函数接受一个｀CVarArgType"),n("code",[t._v("类型的数组，并返回一个")]),t._v("CVaListPointer"),n("code",[t._v("值；而")]),t._v("withVaList("),n("em",[t._v(":")]),t._v("😃"),n("code",[t._v("则把参数值作为闭包的传输传入，而不是直接返回这些值。得到的")]),t._v("CVaListPointer"),n("code",[t._v("值随后传给C语言可变参数函数的")]),t._v("va_list"),n("code",[t._v("参数。例如，下面是一个如何在Swift中调用")]),t._v("vasprintf`函数的例子：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("_")]),t._v(" args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CVarArgType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("withVaList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" va_list "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("UnsafeMutablePointer")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Int8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" format"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCString "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CString")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("guard")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("vasprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("CString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" va_list"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("nil")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromCString")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sprintf")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"√2 ≡ %g"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sqrt")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 打印出 "√2 ≡ 1.41421"')]),t._v("\n")])])]),n("h3",{attrs:{id:"全局常量"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局常量"}},[t._v("#")]),t._v(" 全局常量")]),t._v(" "),n("p",[t._v("在C和Objective-C源码中定义的全局常量会被Swift编译器自动导入为Swift的全局常量。")]),t._v(" "),n("h3",{attrs:{id:"预处理指令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#预处理指令"}},[t._v("#")]),t._v(" 预处理指令")]),t._v(" "),n("p",[t._v("Swift编译器不包含预处理器。作为替代，它能利用编译时（compile-time）参数，构建配置（build configuration）和语言特性来实现相同的功能。因此预处理指令不会导入Swift。")]),t._v(" "),n("h4",{attrs:{id:"简单的宏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#简单的宏"}},[t._v("#")]),t._v(" 简单的宏")]),t._v(" "),n("p",[t._v("在C和Objective-C中用"),n("code",[t._v("#define")]),t._v("指令创建一个基本常量的地方，在Swift中你可以通过定义全局常量来代替。例如，这个常量定义："),n("code",[t._v("#define FADE_ANIMATION_DURATION 0.35")]),t._v("，在Swift中用"),n("code",[t._v("let FADE_ANIMATION_DURATION = 0.35")]),t._v("来表示。因为简单的类似常量的宏定义在Swift中会直接映射为全局变量，所以编译器会自动导入C和Objective-C源码中的简单的宏定义。")]),t._v(" "),n("h4",{attrs:{id:"复杂的宏"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#复杂的宏"}},[t._v("#")]),t._v(" 复杂的宏")]),t._v(" "),n("p",[t._v("C和Objective-C中使用的复杂的宏，在Swift中没有对应的概念。复杂的宏不是定义常量的宏，包括：参数化的宏、类似函数的宏。在C和Objective-C中使用复杂宏一般是为了避开类型检查的约束，或者是为了避免重复输入大量的模板（boilerplate）代码。然而宏会让除错和重构变得更加困难。在Swift中，你可以使用函数和泛型来达到同样的效果，而且不会产生副作用（without any compromises）。因此，C和Objective-C中的复杂宏在Swift代码中是不可用的。")]),t._v(" "),n("h4",{attrs:{id:"构建配置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构建配置"}},[t._v("#")]),t._v(" 构建配置")]),t._v(" "),n("p",[t._v("Swift代码和Objective-C代码通过不同的手段进行条件编译。Swift代码可以基于对"),n("em",[t._v("构建配置")]),t._v("的评估来实现条件编译。构建配置包含"),n("code",[t._v("true")]),t._v("和"),n("code",[t._v("false")]),t._v("字面值，命令行编译参数，以及下表中的这些平台检测函数。你还可以在命令行中使用"),n("code",[t._v("-D <#flag#>")]),t._v("来设定编译参数。")]),t._v(" "),n("table",[n("tr",[n("td",[n("strong",[t._v("函数")])]),n("td",[n("strong",[t._v("可用的参数")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("os()")])]),n("td",[n("code",[t._v("OSX")]),t._v(","),n("code",[t._v("iOS")]),t._v(","),n("code",[t._v("watchOS")]),t._v(","),n("code",[t._v("tvOS")])])]),t._v(" "),n("tr",[n("td",[n("code",[t._v("arch()")])]),n("td",[n("code",[t._v("x86_64")]),t._v(","),n("code",[t._v("arm")]),t._v(","),n("code",[t._v("arm64")]),t._v(","),n("code",[t._v("i386")])])])]),t._v(" "),n("blockquote",[n("p",[n("strong",[t._v("提示")])]),t._v(" "),n("p",[n("code",[t._v("arch(arm)")]),t._v("编译配置在ARM 64设备上不会返回"),n("code",[t._v("true")]),t._v("。"),n("code",[t._v("arch(i386)")]),t._v("编译配置在代码为32位的iOS模拟器编译时返回"),n("code",[t._v("true")]),t._v("。")])]),t._v(" "),n("p",[t._v("一个简单的条件编译语句形式如下：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("#"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#编译配置#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#语句#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#语句#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#endif\n")])])]),n("p",[t._v("其中"),n("em",[t._v("语句")]),t._v("部分包含零条或更多条的合法Swift语句，可以包含表达式、一般语句和控制流语句。你可以使用"),n("code",[t._v("&&")]),t._v("和"),n("code",[t._v("||")]),t._v("操作符为一个条件编译语句增加额外的构建配置；用"),n("code",[t._v("!")]),t._v("操作符来对构建配置取反；用"),n("code",[t._v("#elseif")]),t._v("来增加一个条件语句块：")]),t._v(" "),n("div",{staticClass:"language-swift extra-class"},[n("pre",{pre:!0,attrs:{class:"language-swift"}},[n("code",[t._v("#"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#编译配置#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#编译配置#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#语句#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#elseif "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#编译配置#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#语句#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("#语句#"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n#endif\n")])])]),n("p",[t._v("与C语言预处理起的条件编译指令不同的是，条件编译语句包围的代码块必需是自包含的，而且在语法上是合法的。这是因为所有的Swift代码都会经过语法检查--甚至是那些不会被编译的代码。")]),t._v(" "),n("p",[n("RouterLink",{attrs:{to:"/1_开始.html#开始"}},[t._v("< 1. 开始")]),t._v(" | "),n("RouterLink",{attrs:{to:"/0_目录.html"}},[t._v("目录")]),t._v(" | "),n("RouterLink",{attrs:{to:"/3_混合编程.html"}},[t._v("3.混合编程 >")])],1)])}),[],!1,null,null,null);s.default=e.exports}}]);